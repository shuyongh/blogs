import{_ as i,c as a,a as n,o as h}from"./app-C7T5jqfQ.js";const k={};function l(e,s){return h(),a("div",null,s[0]||(s[0]=[n(`<blockquote><p>套接字是一种通信信道，让不同的机器能用互联网协议（Internet Protocol，简称 IP）在网上通信。</p><p>两个核心互联网协议：传输控制协议（Transmission Control Protocol，简称 TCP）和用户数据报协议（User Datagram Protocol，简称 UDP）</p><ul><li><strong>UDP</strong>: 能让应用程序相互发送简短的消息（称为数据报），但是并不保证这些消息能成功到达。</li><li><strong>TCP</strong>: 能提供可靠的字节流，只要连接存在就会按顺序到达。</li></ul></blockquote><h2 id="tcp" tabindex="-1"><a class="header-anchor" href="#tcp"><span>TCP</span></a></h2><h3 id="gen-tcp-connect-3" tabindex="-1"><a class="header-anchor" href="#gen-tcp-connect-3"><span><code>gen_tcp:connect/3</code></span></a></h3><blockquote><p>用于建立 TCP 客户端连接的函数。它允许你连接到远程主机上的指定端口，并返回一个表示连接的 <strong>socket</strong>（即通信端点）</p></blockquote><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">type</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> connect_option</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ip</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> inet</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">socket_address</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">fd</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Fd</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> non_neg_integer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ifaddr</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> inet</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">socket_address</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">        inet</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">address_family</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> inet</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">port_number</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">tcp_module</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> module</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">netns</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> file</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">filename_all</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">bind_to_device</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> binary</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        option</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">().</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">type</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> option</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">active</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">          true</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">false</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">once</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">32768</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">..</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">32767</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">buffer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">          non_neg_integer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">delay_send</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">      boolean</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">deliver</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">         port</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">term</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">dontroute</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">       boolean</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">exit_on_close</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">   boolean</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">header</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">          non_neg_integer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">high_msgq_watermark</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> pos_integer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">high_watermark</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  non_neg_integer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">keepalive</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">       boolean</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">linger</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">          {</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">boolean</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(),</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> non_neg_integer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">low_msgq_watermark</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> pos_integer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">low_watermark</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">   non_neg_integer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">mode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">            list</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">binary</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">list</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">binary</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">nodelay</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">         boolean</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">packet</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">         0</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">4</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">raw</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">sunrm</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |  </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">asn1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">         cdr</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">fcgi</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">line</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">tpkt</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">http</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">httph</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">http_bin</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">httph_bin</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">packet_size</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">     non_neg_integer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">priority</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        non_neg_integer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">raw</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">         Protocol</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> non_neg_integer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(),</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">         OptionNum</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> non_neg_integer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(),</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">         ValueBin</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> binary</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">recbuf</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">          non_neg_integer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">reuseaddr</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">       boolean</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">send_timeout</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    non_neg_integer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">infinity</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">send_timeout_close</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> boolean</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">show_econnreset</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> boolean</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">sndbuf</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">          non_neg_integer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">tos</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">             non_neg_integer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">tclass</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">          non_neg_integer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ttl</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">             non_neg_integer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">	{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">recvtos</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">         boolean</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">	{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">recvtclass</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">      boolean</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">	{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">recvttl</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">         boolean</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">	{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ipv6_v6only</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">     boolean</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()}.</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">spec</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> connect</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Address</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Options</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">error</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Reason</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> when</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">      Address</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> inet</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">socket_address</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">inet</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">hostname</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">      Port</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> inet</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">port_number</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">      Options</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">connect_option</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()]</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">      Socket</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">      Reason</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> inet</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">posix</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">().</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>参数说明</strong></p><ol><li><p><code>Address</code></p><ul><li>指定要连接的远程主机，可以是一个主机名（如 <code>&quot;example.com&quot;</code>）或一个 IP 地址（如 <code>{&quot;192.168.1.1&quot;}</code>）。</li><li>也可以是 <code>{host(), port_number()}</code> 的格式，表示具体的 IP 地址和端口。</li></ul></li><li><p><code>Port</code></p><ul><li>要连接的远程主机端口号，通常是一个整数（如 <code>80</code>、<code>443</code> 等）。</li></ul></li><li><p><code>Options</code></p><ul><li>连接时使用的各种配置选项，通常是一个由选项元组组成的列表。常见的选项包括： <ul><li><code>binary</code>：表示传输的数据是原始二进制数据。</li><li><code>{packet, Type}</code>：指定数据包类型，可能的值包括 <code>raw</code>（原始字节流）、<code>line</code>（每行以换行符结束）、<code>tcp</code>（使用 TCP 协议），等等。</li><li><code>{tcp_nodelay, true}</code>：禁用 TCP 的 Nagle 算法，提高小数据包的传输效率。</li><li><code>{send_timeout, Timeout}</code>：设置发送超时，单位是毫秒。</li><li><code>{keepalive, true}</code>：启用 TCP keepalive，用于保持连接活跃。</li><li><code>{reuseaddr, true}</code>：允许重复使用本地地址和端口。</li></ul></li></ul><p>你可以根据需求提供多个选项。</p></li></ol><p><strong>返回值</strong></p><ul><li><strong><code>{ok, Socket}</code></strong>：表示连接成功，<code>Socket</code> 是一个 TCP socket，用于后续的数据发送和接收。</li><li><strong><code>{error, Reason}</code></strong>：表示连接失败，<code>Reason</code> 是失败的原因，常见的错误包括 <code>econnrefused</code>（连接被拒绝）或 <code>timeout</code>（连接超时）。</li></ul><h3 id="gen-tcp-send-2" tabindex="-1"><a class="header-anchor" href="#gen-tcp-send-2"><span><code>gen_tcp:send/2</code></span></a></h3><blockquote><p>通过 TCP 套接字（socket）向远程主机发送数据</p></blockquote><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">spec</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> gen_tcp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">send</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> ok</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">error</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Reason</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">               when</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">                   Socket</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">                   Data</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> iodata</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">                   Reason</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> term</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">().</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>参数说明</strong></p><ol><li><strong><code>Socket</code></strong>： <ul><li>一个已连接的 TCP 套接字（由 <code>gen_tcp:connect/3</code> 或其他相关函数创建）。</li><li><strong>类型</strong>：<code>socket()</code>，即一个 TCP 连接句柄。</li></ul></li><li><strong><code>Data</code></strong>： <ul><li>要发送的数据。</li><li><strong>类型</strong>：<code>iodata()</code>，不仅可以发送二进制数据，还可以发送字符列表、或者二进制与字符列表的组合。。</li></ul></li></ol><p><strong>返回值</strong></p><ul><li><strong><code>ok</code></strong>：表示数据成功发送。</li><li><strong><code>{error, Reason}</code></strong>：表示发送失败，<code>Reason</code> 是失败的原因。常见的错误包括连接关闭、网络不可达等。</li></ul><h3 id="gen-tcp-recv-2" tabindex="-1"><a class="header-anchor" href="#gen-tcp-recv-2"><span><code>gen_tcp:recv/2</code></span></a></h3><blockquote><p>接收来自 TCP 连接的数据的函数</p></blockquote><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">spec</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> gen_tcp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">recv</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Length</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">error</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Reason</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">               when</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">                   Socket</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">                   Length</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> non_neg_integer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">                   Data</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> iodata</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">                   Reason</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> term</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">().</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>参数</strong></p><ul><li><p><strong><code>Socket</code></strong>：已经建立的 TCP 套接字（<code>gen_tcp:connect/3</code> 返回的结果）。</p></li><li><p><strong><code>Length</code></strong>：期望接收的最大字节数。它是一个非负整数，表示一次接收操作的字节数限制。可以用它来控制接收的数据量。</p></li></ul><p><strong>返回值</strong></p><ul><li><p><strong><code>Data</code></strong>：接收到的数据，类型为 <code>iodata()</code>，可以是二进制、字符列表或它们的组合。</p></li><li><p><strong><code>Reason</code></strong>：出错时的原因。</p></li></ul><h3 id="gen-tcp-listen-2" tabindex="-1"><a class="header-anchor" href="#gen-tcp-listen-2"><span><code>gen_tcp:listen/2</code></span></a></h3><blockquote><p><strong>创建和启动一个 TCP 监听套接字</strong> 的函数，通常用于服务器端。它会在指定的端口上监听来自客户端的连接请求。服务器进程可以通过 <code>gen_tcp:accept/1</code> 来接受连接并建立与客户端的通信。</p></blockquote><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">gen_tcp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">listen</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Options</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> ListenSocket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">error</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Reason</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>参数</strong></p><ul><li><strong><code>Port</code></strong>: 指定服务器监听的端口号。它是一个整数，表示服务器希望监听的端口。</li><li><strong><code>Options</code></strong>: 一个可选的选项列表，用于配置监听套接字的行为。常见的选项包括： <ul><li><code>binary</code>: 表示数据以二进制格式传输。</li><li><code>{packet, N}</code>: 指定数据包大小。例如，<code>{packet, 0}</code> 表示无包头，<code>{packet, 4}</code> 表示每个数据包的头部包含 4 字节长度信息。</li><li><code>{active, true}</code>: 开启主动模式，数据会直接传递给进程，不需要显式调用 <code>gen_tcp:recv/2</code>。</li><li><code>{backlog, N}</code>: 设置在操作系统层面允许等待连接的最大排队数。<code>N</code> 是一个整数，通常设置为 5。</li><li><code>{reuseaddr, true}</code>: 允许地址重用，可以使得一个端口可以被快速复用（通常在服务器关闭后立即重启时用）。</li><li><code>{inet6, true}</code>: 启用 IPv6。</li></ul></li></ul><p><strong>返回值</strong></p><ul><li><strong><code>{ok, ListenSocket}</code></strong>: 如果成功创建监听套接字，则返回一个元组 <code>{ok, ListenSocket}</code>，其中 <code>ListenSocket</code> 是新的监听套接字，用于后续的连接接受（通过 <code>gen_tcp:accept/1</code>）。</li><li><strong><code>{error, Reason}</code></strong>: 如果发生错误，则返回 <code>{error, Reason}</code>，其中 <code>Reason</code> 描述了错误的原因。</li></ul><h3 id="gen-tcp-accept-1" tabindex="-1"><a class="header-anchor" href="#gen-tcp-accept-1"><span><code>gen_tcp:accept/1</code></span></a></h3><blockquote><p>用于 TCP 服务器端，等待客户端的连接。具体来说，它在一个已经通过 <code>gen_tcp:listen/2</code> 创建并监听的套接字上调用，<strong>阻塞地等待并接受一个客户端的连接请求</strong></p></blockquote><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">gen_tcp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">accept</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">ListenSocket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">error</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Reason</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>参数</strong></p><ul><li><strong><code>ListenSocket</code></strong>: 这是一个通过 <code>gen_tcp:listen/2</code> 创建的监听套接字，用于等待客户端连接。当有客户端请求连接时，<code>gen_tcp:accept/1</code> 会接受该连接。</li></ul><p><strong>返回值</strong></p><ul><li><strong><code>{ok, Socket}</code></strong>: 如果接受到一个客户端连接，函数返回 <code>{ok, Socket}</code>，其中 <code>Socket</code> 是与客户端建立连接的套接字，可以用于与该客户端进行通信。</li><li><strong><code>{error, Reason}</code></strong>: 如果发生错误，返回 <code>{error, Reason}</code>，其中 <code>Reason</code> 描述了错误的原因。****</li></ul><h3 id="gen-tcp-close-1" tabindex="-1"><a class="header-anchor" href="#gen-tcp-close-1"><span><code>gen_tcp:close/1</code></span></a></h3><blockquote><p>关闭一个已打开的 TCP 套接字</p></blockquote><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">gen_tcp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">close</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> ok</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">error</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Reason</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>参数</strong></p><ul><li><strong>Socket</strong>：要关闭的 TCP 套接字。通常这是通过 <code>gen_tcp:listen/1</code> 和 <code>gen_tcp:accept/1</code> 创建的套接字。</li></ul><p><strong>返回值</strong></p><ul><li><strong><code>ok</code></strong>：如果成功关闭套接字，返回 <code>ok</code>。</li><li><strong><code>{error, Reason}</code></strong>：如果关闭套接字失败，返回 <code>{error, Reason}</code>，其中 <code>Reason</code> 是失败的原因。</li></ul><h3 id="主动和被动套接字" tabindex="-1"><a class="header-anchor" href="#主动和被动套接字"><span>主动和被动套接字</span></a></h3><blockquote><p>Erlang 的套接字可以有三种打开模式：主动（active）、单次主动（active once）或被动（passive）。</p><p>通过在 <code>gen_tcp:connect(Address, Port, Options)</code> 或 <code>gen_tcp:listen(Port, Options)</code> 的 Options 参数里加入 <code>{active, true | false | once}</code> 选项实现的。</p></blockquote><h4 id="主动-非阻塞式" tabindex="-1"><a class="header-anchor" href="#主动-非阻塞式"><span>主动（非阻塞式）</span></a></h4><blockquote><p>指定 <code>{active, true}</code> 就会创建一个主动套接字</p><p>这种类型的服务器被称为非阻塞式服务器，因为它无法阻挡客户端。只有在确信服务器能跟上客户端的需求时才会编写非阻塞式服务器。</p></blockquote><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Listen</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> gen_tcp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">listen</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,[</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">..</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">active</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">...</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">])</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ok</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">，</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> gen_tcp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">accept</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Listen</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">loop</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">loop</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    receive</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">tcp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> -&gt;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    ..对数据进行操作..</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">tcp_closed</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">，</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}-&gt;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    ..</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">end</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个进程无法控制通往服务器循环的消息流。如果客户端生成数据的速度快于服务器处理数据的速度，系统就会遭受数据洪流的冲击：消息缓冲区会被塞满，系统可能会崩溃或表现异常。</p><h4 id="被动-阻塞式" tabindex="-1"><a class="header-anchor" href="#被动-阻塞式"><span>被动（阻塞式）</span></a></h4><blockquote><p>个服务器通过设置{active, false}选项被动模式打开套接字。</p><p>这个服务器不会因为某个过激的客户端试图用过量数据冲击它而崩溃。</p></blockquote><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Listen</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> gen_tcp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">listen</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Port</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">，</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">..</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">active</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> false</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">...</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">])</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> gen_tcp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">accept</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Listen</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">loop</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">loop</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    case</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> gen_tcp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">recv</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Socket</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">，</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">N</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> of</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ok</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">，</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">B</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}-&gt;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">   	 ·．对数据进行操作</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">   	 loop</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">error</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">，</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">closed</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">end</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>服务器循环里的代码会在每次想要接收数据时调用 <code>gen_tcp:recv</code>。客户端会一直被阻塞，直到服务器调用 recv 为止。请注意，操作系统有自己的缓冲设置，即使没有调用 recv，客户端也能在阻塞前发送少量数据。</p><h4 id="混合-部分阻塞式" tabindex="-1"><a class="header-anchor" href="#混合-部分阻塞式"><span>混合（部分阻塞式）</span></a></h4><blockquote><p>不是阻塞也不是非阻塞。用 <code>{active, once}</code> 选项打开套接字。套接字在这个模式下虽然是主动的，但只针对一个消息。当控制进程收到一个消息后，必须显式调用 <code>inet:setopts</code> 才能重启下一个消息的接收，在此之前系统会处于阻塞状态。</p></blockquote><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Listen</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> gen_tcp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">listen</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Port</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">，</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">..</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">active</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> once</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">...</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">])</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> gen_tcp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">accept</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Listen</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">loop</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">loop</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">V</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    receive</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">tcp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">，</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Socket</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">，</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> -&gt;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            ..．对数据进行操作.··</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">            %当你准备好启动下一个消息的接收时</span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">            inet</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">setopts</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Sock</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">，</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">active</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">，</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">once</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}]),</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            loop</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">tcp_closed</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">，</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}-&gt;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    end</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过使用 <code>{active, once}</code> 选项，用户可以实现高级形式的流量控制（有时被称为流量整形），从而防止服务器被过多消息淹没。</p><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h3><p>服务端使用 <code>gen_tcp:listen/2</code> 来监听连接，客户端通过 <code>gen_tcp:connect/3</code> 来连接服务端。客户端发送一条消息，服务端接收到后响应消息。</p><h4 id="服务端" tabindex="-1"><a class="header-anchor" href="#服务端"><span>服务端</span></a></h4><p>服务端将使用 <code>gen_tcp:listen/2</code> 创建一个监听套接字，然后通过 <code>gen_tcp:accept/1</code> 接受客户端连接。接受连接后，它会读取客户端的消息并发送响应。</p><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">% 文件: tcp_server.erl</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">module</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">tcp_server</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">export</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">([</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">start</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> accept_connections</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]).</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">start</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    % 启动 TCP 监听套接字，监听指定端口,接收二进制数据、不使用包头、不启用主动模式</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> ListenSocket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> gen_tcp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">listen</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">binary</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">packet</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">},</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">active</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> false</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}]),</span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">    io</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">format</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Server is listening on port </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">~</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">p</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">~</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">n</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]),</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    % 接受连接请求</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    accept_connections</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">ListenSocket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">accept_connections</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">ListenSocket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    % 等待并接受一个客户端连接</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> ClientSocket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> gen_tcp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">accept</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">ListenSocket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">),</span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">    io</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">format</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Accepted connection from client</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">~</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">n</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">),</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    </span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">       % 使用 receive 来接收客户端消息</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    receive</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">tcp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> ClientSocket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> -&gt;</span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">            io</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">format</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Received from client: </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">~</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">s</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">~</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">n</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]),</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">            % 向客户端发送响应</span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">            gen_tcp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">send</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">ClientSocket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Hello from server!</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">),</span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">            io</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">format</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Response sent to client</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">~</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">n</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">tcp_closed</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> ClientSocket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> -&gt;</span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">            io</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">format</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Client closed the connection</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">~</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">n</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    end</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    % 接收客户端发送的数据</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">   % case gen_tcp:recv(ClientSocket, 0) of</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">   %     {ok, Data} -&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">   %         io:format(&quot;Received from client: ~s~n&quot;, [Data]),</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">            % 向客户端发送响应</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">   %         gen_tcp:send(ClientSocket, &quot;Hello from server!&quot;),</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">   %         io:format(&quot;Response sent to client~n&quot;);</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">   %     {error, closed} -&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">   %         io:format(&quot;Connection closed~n&quot;)</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">   % end,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    % 关闭与客户端的连接</span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">    gen_tcp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">close</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">ClientSocket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">),</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    % 继续等待新的客户端连接</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    accept_connections</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">ListenSocket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="客户端" tabindex="-1"><a class="header-anchor" href="#客户端"><span>客户端</span></a></h4><p>客户端通过 <code>gen_tcp:connect/3</code> 连接到服务端，并向服务器发送一条消息。客户端然后接收服务器的响应并打印。</p><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">% 文件: tcp_client.erl</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">module</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">tcp_client</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">export</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">([</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">start</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]).</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">start</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Host</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    % 连接到服务器</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> gen_tcp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">connect</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Host</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">binary</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">packet</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">},</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">active</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> false</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}]),</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    % 发送消息到服务器</span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">    gen_tcp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">send</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Hello from client!</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">),</span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">    io</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">format</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Message sent to server</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">~</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">n</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">),</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    % 接收服务器的响应</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    case</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> gen_tcp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">recv</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> of</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> -&gt;</span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">            io</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">format</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Received from server: </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">~</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">s</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">~</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">n</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">error</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> closed</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> -&gt;</span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">            io</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">format</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Server closed the connection</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">~</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">n</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    end</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    % 关闭连接</span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">    gen_tcp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">close</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="udp" tabindex="-1"><a class="header-anchor" href="#udp"><span>UDP</span></a></h2><blockquote><p>UDP 数据报是 <strong>不可靠</strong> 的，这就意味着如果客户端向服务器发送一串 UDP 数据报，它们 <strong>可能会不按顺序到达</strong>，不能成功到达或者不止一次到达。但是每一个数据报只要到达，就会是完好无损的。大型数据报可以被拆分成若干个小片段，但 IP 协议会在传输到应用程序之前重新组合这些片段。</p><p>UDP 是一种 <strong>无连接协议</strong>，意思是 <strong>客户端向服务器发送消息之前不必建立连接</strong>。这就意味着 UDP 非常适合那些大量客户端向服务器发送简短消息的应用程序。</p></blockquote><h3 id="常用方法" tabindex="-1"><a class="header-anchor" href="#常用方法"><span>常用方法</span></a></h3><h4 id="gen-udp-open-2" tabindex="-1"><a class="header-anchor" href="#gen-udp-open-2"><span><code>gen_udp:open/2</code></span></a></h4><blockquote><p>用于打开一个 UDP 套接字</p></blockquote><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">gen_udp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">open</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Options</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">error</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Reason</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>参数</strong></p><ul><li><strong>Port</strong>：要打开的 UDP 端口号（整数）。这通常是你希望通过 UDP 协议接收和发送数据的端口。</li><li><code>Options</code>：一个包含套接字选项的列表。常见的选项包括： <ul><li><code>{ip, IP}</code>：指定绑定的本地 IP 地址（默认为 <code>0.0.0.0</code>，表示绑定到所有可用的本地接口）。</li><li><code>{active, true}</code>：启用主动模式，消息将直接传递给进程，而无需显式调用 <code>gen_udp:recv/2</code> 来接收数据。</li><li><code>{active, false}</code>：启用被动模式，数据将不会自动发送给进程，需要显式调用 <code>gen_udp:recv/2</code> 来接收数据。</li><li><code>{reuseaddr, true}</code>：允许多个进程绑定到同一地址和端口。</li><li><code>{buffer, Size}</code>：设置接收缓冲区的大小。</li><li><code>{packet, Type}</code>：指定数据包类型（例如 <code>raw</code>、<code>line</code>、<code>udp</code>）。</li></ul></li></ul><p><strong>返回值</strong></p><ul><li><strong><code>{ok, Socket}</code></strong>：如果成功，返回一个元组 <code>{ok, Socket}</code>，其中 <code>Socket</code> 是一个已打开的 UDP 套接字。</li><li><strong><code>{error, Reason}</code></strong>：如果出现错误，返回 <code>{error, Reason}</code>，<code>Reason</code> 是错误原因。</li></ul><h4 id="gen-udp-send-4" tabindex="-1"><a class="header-anchor" href="#gen-udp-send-4"><span><code>gen_udp:send/4</code></span></a></h4><blockquote><p>用于发送 UDP 数据报</p></blockquote><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">gen_udp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">send</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Ip</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> ok</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">error</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Reason</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>参数</strong></p><ul><li><strong>Socket</strong>：一个已经打开的 UDP 套接字（由 <code>gen_udp:open/2</code> 打开）。</li><li><strong>Ip</strong>：目标 IP 地址，可以是一个字符串形式的 IPv4 地址（如 <code>&quot;192.168.1.100&quot;</code>）或者二进制格式的 IP 地址（如 <code>&lt;&lt;192, 168, 1, 100&gt;&gt;</code>）。也可以使用广播地址 <code>255.255.255.255</code>。</li><li><strong>Port</strong>：目标端口号（整数）。</li><li><strong>Data</strong>：要发送的数据。它可以是一个二进制数据（<code>binary()</code>）或者 IO 数据类型（<code>iodata()</code>）。数据会被直接发送到目标地址和端口。</li></ul><p><strong>返回值</strong></p><ul><li><strong><code>ok</code></strong>：如果发送成功，返回 <code>ok</code>。</li><li><strong><code>{error, Reason}</code></strong>：如果发生错误，返回 <code>{error, Reason}</code>，其中 <code>Reason</code> 是错误原因。</li></ul><h4 id="gen-udp-close-1" tabindex="-1"><a class="header-anchor" href="#gen-udp-close-1"><span><code>gen_udp:close/1</code></span></a></h4><blockquote><p>用于关闭已打开的 UDP 套接字</p></blockquote><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">gen_udp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">close</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Socket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> ok</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">error</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Reason</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>参数</strong></p><ul><li><strong>Socket</strong>：要关闭的 UDP 套接字。这是由 <code>gen_udp:open/2</code> 打开的套接字。</li></ul><p><strong>返回值</strong></p><ul><li><strong><code>ok</code></strong>：如果成功关闭套接字，返回 <code>ok</code>。</li><li><strong><code>{error, Reason}</code></strong>：如果关闭套接字失败，返回 <code>{error, Reason}</code>，其中 <code>Reason</code> 是错误原因。</li></ul><h2 id="websocket" tabindex="-1"><a class="header-anchor" href="#websocket"><span>WebSocket</span></a></h2><blockquote><p>WebSocket 是 HTML5 标准的一部分，它是一种 <strong>双向异步套接字</strong>，可以用来在浏览器和外部程序之间传递消息。</p><p>WebSocket 是一种网络协议，它提供了一个全双工的通信通道，允许在客户端和服务器之间进行实时的、低延迟的数据传输。WebSocket 的连接一旦建立，双方就可以在这条连接上进行双向通信，而不需要每次都重新建立连接。</p><p>在 Erlang 中，可以使用 <code>cowboy</code>、<code>websocket</code> 或其他 HTTP/WebSocket 库来实现 WebSocket 编程。</p></blockquote><h3 id="安装-cowboy" tabindex="-1"><a class="header-anchor" href="#安装-cowboy"><span>安装 Cowboy</span></a></h3><blockquote><p>在 Erlang 中使用 <code>cowboy</code> 来实现 WebSocket 编程时，需要先安装 <code>cowboy</code> 库。你可以使用 <code>rebar3</code> 来管理依赖。</p></blockquote><ul><li>在你的项目目录下创建一个 <code>rebar.config</code> 文件，并添加 <code>cowboy</code> 依赖</li></ul><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">deps</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">cowboy</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">~&gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 2.8</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">]}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>通过 <code>rebar3</code> 安装依赖</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>rebar3 compile</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="websocket-服务器实现" tabindex="-1"><a class="header-anchor" href="#websocket-服务器实现"><span>WebSocket 服务器实现</span></a></h3><p>创建一个简单的 WebSocket 服务器，该服务器接受来自客户端的 WebSocket 连接，并通过 WebSocket 发送消息给客户端。</p><h4 id="创建-websocket-处理模块" tabindex="-1"><a class="header-anchor" href="#创建-websocket-处理模块"><span>创建 WebSocket 处理模块</span></a></h4><p>该模块将处理 WebSocket 的握手、消息的接收和发送。</p><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">module</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">ws_handler</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">behaviour</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">cowboy_websocket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">%% API</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">export</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">([</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">init</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> websocket_handle</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> websocket_info</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> terminate</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]).</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">%% 初始化 WebSocket</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">init</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Req</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">State</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Req</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> State</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">%% 处理 WebSocket 消息</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">websocket_handle</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">text</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Msg</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">State</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">    io</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">format</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Received message: </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">~</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">p</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">~</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">n</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Msg</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]),</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    % 向客户端发送响应消息</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">reply</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">text</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Echo: </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ++</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Msg</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">},</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> State</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">websocket_handle</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ping</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> _PingData</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">State</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    % 响应 ping 请求</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">reply</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">pong</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> []},</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> State</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">websocket_handle</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">_</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">State</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> State</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">%% 处理 WebSocket 信息</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">websocket_info</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">_Info</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">State</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> State</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">%% 关闭连接</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">terminate</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">_Reason</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">_State</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="创建-cowboy-http-服务器" tabindex="-1"><a class="header-anchor" href="#创建-cowboy-http-服务器"><span>创建 Cowboy HTTP 服务器</span></a></h4><p>创建一个简单的 Cowboy HTTP 服务器，将 WebSocket 处理程序与服务器绑定。</p><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">module</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">ws_server</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">export</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">([</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">start</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]).</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">start</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> _</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> cowboy</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">start_clear</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">http_listener</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 100</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        [{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 8080</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}],</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        % 启动 cowboy 路由</span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">        cowboy_router</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">compile</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">([</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">            {&#39;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">_</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&#39;,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">                {</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/ws</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> ws_handler</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> []}</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">            ]}</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        ])</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><strong><code>cowboy:start_clear/3</code></strong>：启动一个 HTTP 服务器，监听 8080 端口，<code>start_clear</code> 是指不使用加密（非 HTTPS）进行通信。</p></li><li><p><strong><code>cowboy_router:compile/1</code></strong>：编译并注册 HTTP 路由。这里我们设置路由，使得当请求访问 <code>/ws</code> 路径时，WebSocket 连接会被传递给 <code>ws_handler</code> 处理程序。</p></li></ul><h4 id="客户端连接" tabindex="-1"><a class="header-anchor" href="#客户端连接"><span>客户端连接</span></a></h4><p>简单的 JavaScript 示例，使用 WebSocket 客户端连接到服务器并发送消息：</p><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">var</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> ws</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> new</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> WebSocket</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ws://localhost:8080/ws</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ws</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">onopen</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> function</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">event</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    console</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">WebSocket is connected.</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    ws</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">send</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Hello, Server!</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ws</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">onmessage</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> function</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">event</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    console</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Received from server: </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> event</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ws</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">onerror</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> function</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">event</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    console</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">error</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">WebSocket error: </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> event</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ws</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">onclose</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> function</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">event</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    console</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">WebSocket is closed.</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,110)]))}const p=i(k,[["render",l]]),d=JSON.parse('{"path":"/backend/erlang/e74hii78/","title":"套接字编程","lang":"zh-CN","frontmatter":{"title":"套接字编程","createTime":"2025/03/22 15:48:54","permalink":"/backend/erlang/e74hii78/"},"headers":[],"readingTime":{"minutes":13.24,"words":3972},"git":{"updatedTime":1745462251000,"contributors":[{"name":"舒永好","username":"舒永好","email":"shuyonghao@guoshenghuaxing.com","commits":1,"avatar":"https://gravatar.com/avatar/4b1c3f37ea707968be73c631a79de33afd360724ce87bf8f9dcacd67d14df92c?d=retro"},{"name":"syh","username":"syh","email":"syh@qq.com","commits":1,"avatar":"https://gravatar.com/avatar/060d67e779a1b0aeace68a2a010b367f852e56888393383ea27302df983f6814?d=retro"}]},"filePathRelative":"notes/backend/erlang/erlang_foundation/socket_programming.md"}');export{p as comp,d as data};
