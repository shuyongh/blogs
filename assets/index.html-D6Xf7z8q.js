import{_ as e,c as a,a as i,o as n}from"./app-C7T5jqfQ.js";const l="/blogs/assets/image-20230727221359110-CgHUKt4M.png",r="/blogs/assets/image-20230727224621167-CroMZTUY.png",o="/blogs/assets/image-20230727233012297-BBNgFucK.png",d="/blogs/assets/image-20230727225027996-BYL7tsx3.png",c="/blogs/assets/image-20230727225058089-BSp1pXnD.png",p={};function t(m,s){return n(),a("div",null,s[0]||(s[0]=[i('<ul><li>Docker Compose可以基于Compose文件帮我们快速的部署分布式应用，而无需手动以一个俱创建和运行容器</li><li>Compose文件是一个文本文件，通过指令定义集群中的每个容器如何运行</li><li>Compose是用来定义和运行一个或多个容器运行和应用的工具 <ul><li>可以使用YAML文件来配置应用程序的服务，然后，使用单个命令，根据配置创建并启动所有服务</li></ul></li></ul><p><img src="'+l+`" alt="image-20230727221359110"></p><h2 id="快速入门" tabindex="-1"><a class="header-anchor" href="#快速入门"><span>快速入门</span></a></h2><h3 id="编写模板" tabindex="-1"><a class="header-anchor" href="#编写模板"><span>编写模板</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>command 覆盖容器启动后的默认指令</span></span>
<span class="line"><span>environment 指定环境变量，相当于run的-e选项</span></span>
<span class="line"><span>image 用来指定镜像</span></span>
<span class="line"><span>networks 指定网络,相当于run的--network</span></span>
<span class="line"><span>ports 用来指定要发布的端口 ，相当于run 的-p</span></span>
<span class="line"><span>volumes 用来指定数据卷，相当于-v</span></span>
<span class="line"><span>restart 用来指定重启策略，相当于--restar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="运行" tabindex="-1"><a class="header-anchor" href="#运行"><span>运行</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>docker compose up -d</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="停止" tabindex="-1"><a class="header-anchor" href="#停止"><span>停止</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>docker compose down</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="dockercompose——部署微服务集群" tabindex="-1"><a class="header-anchor" href="#dockercompose——部署微服务集群"><span>DockerCompose——部署微服务集群</span></a></h2><ul><li>在cloud-demo文件夹中准备以下文件</li></ul><p><img src="`+r+'" alt="image-20230727224621167"></p><ul><li><p>修改自己的cloud-demo项目，将数据库、nacos地址都命名为docker-compose中的服务名（在DockerCompose中可以通过服务名访问到对应的服务）</p></li><li><p>使用maven打包工具，将项目中的每个微服务都打包为app.jar</p></li><li><p>将打包好的app.jar拷贝到cloud-demo中的每一个对应的子目录中</p><ul><li>docker-compose.yml文件</li></ul><p><img src="'+o+'" alt="image-20230727233012297"></p><ul><li>在子目录中有一个Dockerfile文件</li></ul><p><img src="'+d+'" alt="image-20230727225027996"></p><p><img src="'+c+'" alt="image-20230727225058089"></p></li><li><p>将cloud-demo上传至虚拟机，利用<code>docker-compse up -d </code>来部署</p></li></ul>',13)]))}const g=e(p,[["render",t]]),u=JSON.parse('{"path":"/os/gfk0wcrs/","title":"docker_compose","lang":"zh-CN","frontmatter":{"title":"docker_compose","createTime":"2025/04/05 16:57:51","permalink":"/os/gfk0wcrs/"},"headers":[],"readingTime":{"minutes":1.36,"words":408},"git":{"updatedTime":1743864983000,"contributors":[{"name":"舒永好","username":"舒永好","email":"shuyonghao@guoshenghuaxing.com","commits":1,"avatar":"https://gravatar.com/avatar/4b1c3f37ea707968be73c631a79de33afd360724ce87bf8f9dcacd67d14df92c?d=retro"}]},"filePathRelative":"notes/os/docker/docker_compose.md"}');export{g as comp,u as data};
