import{_ as i,c as a,a as e,o as h}from"./app-C7T5jqfQ.js";const n={};function l(k,s){return h(),a("div",null,s[0]||(s[0]=[e(`<blockquote><p>分布式Erlang适合编写那些可信任其他参与者的集群应用程序，但在并非人人都可信的开放式环境里，它就不那么适合了。</p></blockquote><p>分布式Erlang的主要问题在于客户端可以自行决定在服务器上分裂出各种进程。因此，要摧毁你的系统，只需执行下面的命令：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>rpc:multicall(nodes(), os,cmd,[&quot;cd /;rm -rf *&quot;])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>分布式Erlang的适用情形是你拥有全部的机器，并且想在单台机器上控制它们。但如果这些机器分别为不同的人所有，并且他们想要精确控制自己的机器可以运行哪些软件，这种计算模型就不适合了。</p><p>在这种情况下，我们将使用一种受限形式的spawn，让机器的所有者能够显式控制自己机器上运行的程序。</p><h2 id="用lib-chan控制进程" tabindex="-1"><a class="header-anchor" href="#用lib-chan控制进程"><span>用<code>lib_chan</code>控制进程</span></a></h2><blockquote><p><code>lib_chan</code>模块让用户能够显式控制自己的机器能分裂出哪些进程。</p></blockquote><h3 id="start-server-0" tabindex="-1"><a class="header-anchor" href="#start-server-0"><span>start_server()/0</span></a></h3><blockquote><p>它会在本地主机上启动一个服务器。</p></blockquote><p>这个服务器的行为由文件<code>$HOME/.erlang_config/ lib_chan.conf</code>决定。</p><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">spec</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> start_server</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-&gt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="start-server-1" tabindex="-1"><a class="header-anchor" href="#start-server-1"><span>start_server()/1</span></a></h3><blockquote><p>它会在本地主机上启动一个服务器。</p></blockquote><p>这个服务器的行为由文件<code>Conf</code>决定，它包含一个由下列形式的元组所组成的列表：</p><ul><li><p><code>{port, NNNN}</code></p><ul><li>它会开始监听端口号<code>NNNN</code>。</li></ul></li><li><p><code>{service,S password,P,mfa,SomeMod,SomeFunc, SomeArgsS}</code></p><ul><li>它会定义一个被密码<code>P</code>保护的服务<code>S</code>。</li><li>如果这个服务启动了，就会通过分裂<code>SomeMod：SomeFunc(MM，ArgsC，SomeArgsS)</code>创建一个进程，负责处理来自客户端的消息。 <ul><li>这里的<code>MM</code>是一个代理进程的<code>PID</code>，可以用来向客户端发送消息。参数<code>ArgsC</code>来自于客户端的连接调用。</li></ul></li></ul></li></ul><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">spec</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> start_server</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Conf</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-&gt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="connect-5" tabindex="-1"><a class="header-anchor" href="#connect-5"><span>connect()/5</span></a></h3><blockquote><p>当客户端调用<code>connect/5</code>建立连接后，就会分裂出两个代理进程，一个在客户端，另一个在服务器端。这些代理进程负责把Erlang消息转换成TCP包数据，捕捉来自控制进程的退出信号，以及套接字关闭。</p></blockquote><p>尝试开启主机<code>Host</code>上的端口<code>Port</code>，然后尝试激活被密码<code>P</code>保护的服务<code>S</code>。如果密码正确，就会返回<code>{ok, Pid}</code>。<code>Pid</code>是一个代理进程的标识符，可以用来向服务器发送消息。</p><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">spec</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> connect</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Host</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">S</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">P</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">ArgsC</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Pid</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">|</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">error</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Why</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="使用示例" tabindex="-1"><a class="header-anchor" href="#使用示例"><span>使用示例</span></a></h2><h3 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件"><span>配置文件</span></a></h3><p>它的意思是我们将在自己机器的1234端口上提供一个名为<code>nameServer</code>的服务。这个服务被密码<code>ABXy45</code>保护。</p><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1234</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">service</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> nameServer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> password</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ABXy45</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">mfa</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> mod_name_server</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> start_me_up</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> notUsed</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="客户端连接" tabindex="-1"><a class="header-anchor" href="#客户端连接"><span>客户端连接</span></a></h3><p>客户端调用下面的函数来创建连接时</p><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">connect</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Host</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1234</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">nameServer</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, “</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">ABXy45</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">°, </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">nil</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>服务器会分裂<code>mod_name_server:start_me_up(MM, nil, notUsed)</code>。MM是一个代理进程的PID，用来和客户端通信。</p><h3 id="服务器代码" tabindex="-1"><a class="header-anchor" href="#服务器代码"><span>服务器代码</span></a></h3><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">module</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">mod_name_server</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> .</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">export</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">([</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">start_me_up</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]).</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">start_me_up</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">MM</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">_ArgsC</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">_ArgS</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">	loop</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">MM</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">loop</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">MM</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    receive</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">chan</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> MM</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">store</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> K</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> V</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}}</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> -&gt;</span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">            kvs</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">store</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">K</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> v</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">),</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            loop</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">MM</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> ;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">chan</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> MM</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">lookup</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">K</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}}</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> -&gt;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">            MM</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> !</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">send</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> kvs</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">lookup</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">K</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)},</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            loop</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">MM</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> ;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">chan_closed</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> MM</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> -&gt;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">        	true</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    end</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>mod_name_server</code>遵循以下协议。</p><ul><li><p>如果客户端向服务器发送一个消息<code>{send, X}</code>，这个消息在<code>mod_name_server</code>里就会变成<code>{chan, MM, X}</code>的形式（MM是服务器代理进程的PID）。</p></li><li><p>如果客户端终止或者用于通信的套接字出于任何原因关闭了，服务器就会收到一个<code>{chan_closed, MM}</code>形式的消息。</p></li><li><p>如果服务器想给客户端发送一个消息<code>X</code>，就会通过调用<code>MM ! {send, X}</code>实现。</p></li><li><p>如果服务器想要显式关闭连接，就会通过执行<code>MM ! close</code>实现。</p></li></ul><p>这个协议是一个中间人协议，客户端代码和服务器代码都遵循它。</p><h3 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h3>`,34)]))}const p=i(n,[["render",l]]),d=JSON.parse('{"path":"/backend/erlang/xmaliuns/","title":"基于套接字的分布式模型","lang":"zh-CN","frontmatter":{"title":"基于套接字的分布式模型","createTime":"2025/03/22 15:09:07","permalink":"/backend/erlang/xmaliuns/"},"headers":[],"readingTime":{"minutes":3.25,"words":975},"git":{"updatedTime":1743091220000,"contributors":[{"name":"舒永好","username":"舒永好","email":"shuyonghao@guoshenghuaxing.com","commits":1,"avatar":"https://gravatar.com/avatar/4b1c3f37ea707968be73c631a79de33afd360724ce87bf8f9dcacd67d14df92c?d=retro"}]},"filePathRelative":"notes/backend/erlang/erlang_otp/distributed_programming/distrubuted_of_socket.md"}');export{p as comp,d as data};
