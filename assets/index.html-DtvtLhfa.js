import{_ as a,c as e,a as i,o as r}from"./app-C7T5jqfQ.js";const o="/blogs/assets/image-20230514112747261-BOAH0tpS.png",l="/blogs/assets/image-20230928150721408-DmeRv1xs.png",n="/blogs/assets/image-20230514112818035-BlL12VSN.png",t="/blogs/assets/image-20230514113300835-NYRhZXt_.png",g="/blogs/assets/image-20230514113601467-YWat_cdG.png",c="/blogs/assets/image-20230514113656125-CZ1GDEAl.png",p="/blogs/assets/image-20230514113749912-Dds-ET1V.png",m="/blogs/assets/image-20230514113850931-BFhdiQlJ.png",d={};function h(u,s){return r(),e("div",null,s[0]||(s[0]=[i('<h2 id="user指令" tabindex="-1"><a class="header-anchor" href="#user指令"><span>user指令</span></a></h2><ul><li>user:用于配置<strong>运行Nginx服务器的worker进程的用户和用户组。</strong></li></ul><p><img src="'+o+'" alt="image-20230514112747261"></p><ul><li>即只能访问当前用户或用户组所拥有权限的文件|文件夹</li></ul><h2 id="work-process指令" tabindex="-1"><a class="header-anchor" href="#work-process指令"><span>work process指令</span></a></h2><p><img src="'+l+'" alt="image-20230928150721408"></p><ul><li>master_process:用来指定是否开启工作进程。</li></ul><p><img src="'+n+'" alt="image-20230514112818035"></p><ul><li>worker_processes <ul><li><strong>用于配置Nginx生成工作进程的数量</strong>，这个是Nginx 服务器实现并发处理服务的关键所在。理论上来说workder process的 值越大，可以支持的并发处理量也越多，但事实上这个值的设定是需要 受到来自服务器自身的限制，建议将该值和服务器CPU的内核数保存一 致。</li></ul></li></ul><p><img src="'+t+'" alt="image-20230514113300835"></p><h2 id="daemon" tabindex="-1"><a class="header-anchor" href="#daemon"><span>daemon</span></a></h2><ul><li>设定Nginx是否以守护进程的方式启动。 <strong>守护式进程是linux后台执行的一种服务进程，特点是独立于控制终端， 不会随着终端关闭而停止。</strong></li></ul><p><img src="'+g+'" alt="image-20230514113601467"></p><h2 id="pid" tabindex="-1"><a class="header-anchor" href="#pid"><span>pid</span></a></h2><ul><li>用来配置Nginx当前master进程的进程号ID存储的文件路径。 <ul><li>该属性可以通过<code>./configure --pid-path=PATH</code>来指定</li></ul></li></ul><p><img src="'+c+'" alt="image-20230514113656125"></p><h2 id="error-log" tabindex="-1"><a class="header-anchor" href="#error-log"><span>error_log</span></a></h2><ul><li>用来配置Nginx的错误日志存放路径</li></ul><p><img src="'+p+'" alt="image-20230514113749912"></p><ul><li>该属性可以通过<code>./configure --error-log-path=PATH</code>来指定</li><li>其中日志级别的值有： debug|info|notice|warn|error|crit|alert|emerg，翻译过来为试|信 息|通知|警告|错误|临界|警报|紧急，这块建议大家设置的时候不要设 置成info以下的等级，因为会带来大量的磁盘I/O消耗，影响Nginx的性 能。</li></ul><h2 id="include" tabindex="-1"><a class="header-anchor" href="#include"><span>include</span></a></h2><ul><li>用来引入其他配置文件，使Nginx的配置更加灵活</li></ul><p><img src="'+m+'" alt="image-20230514113850931"></p>',23)]))}const f=a(d,[["render",h]]),x=JSON.parse('{"path":"/os/65o70og9/","title":"全局块","lang":"zh-CN","frontmatter":{"title":"全局块","createTime":"2025/04/05 16:32:52","permalink":"/os/65o70og9/"},"headers":[],"readingTime":{"minutes":1.44,"words":431},"git":{"updatedTime":1743864983000,"contributors":[{"name":"舒永好","username":"舒永好","email":"shuyonghao@guoshenghuaxing.com","commits":1,"avatar":"https://gravatar.com/avatar/4b1c3f37ea707968be73c631a79de33afd360724ce87bf8f9dcacd67d14df92c?d=retro"}]},"filePathRelative":"notes/os/nginx/base/global.md"}');export{f as comp,x as data};
