import{_ as i,c as a,a as n,o as l}from"./app-C7T5jqfQ.js";const e="/blogs/assets/PixPin_2025-03-31_18-03-32-BvLQXihr.png",h={};function k(t,s){return l(),a("div",null,s[0]||(s[0]=[n(`<p>在 Erlang 中，您可以在模拟器中测试大部分内容；它将在编译和部署时运行您的脚本，但也允许您实时编辑内容。要在 Linux 中启动 shell，请打开终端并键入 <code>$ erl</code>。如果您已正确设置所有内容，您应该会看到类似这样的文本</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>Erlang R13B01 (erts-5.7.2) [source] [smp:2:2] [rq:2] [async-threads:0] [hipe] [kernel-poll:false]</span></span>
<span class="line"><span>Eshell V5.7.2 (abort with ^G)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>恭喜，您正在运行 Erlang shell！</p><p>对于 Windows 用户，您仍然可以运行 <code>erl.exe</code> shell，但建议您改为使用 <code>werl.exe</code>，它可以在您的开始菜单中找到 (<code>programs &gt; Erlang</code>)。Werl 是 Erlang shell 的 Windows 专属实现，它有自己的窗口，带有滚动条并支持命令行编辑（如复制粘贴，这对于 Windows 中的标准 <code>cmd.exe</code> shell 来说很麻烦）。如果您想重定向标准输入或输出，或者使用管道，仍然需要 erl shell。</p><p>我们将能够在模拟器中输入和运行代码，但首先，让我们看看如何在其中四处走动。</p><h2 id="shell命令" tabindex="-1"><a class="header-anchor" href="#shell命令"><span>Shell命令</span></a></h2><p>Erlang shell 有一个基于 Emacs 子集的内置行编辑器，Emacs 是一款自 70 年代以来一直使用的流行文本编辑器。如果您熟悉 Emacs，您应该没问题。对于其他人来说，您也一定会没事的。</p><p><img src="`+e+`" alt="super turtle"></p><p>首先，如果您输入一些文本然后输入 <code>^A</code> (Ctrl+A)，您应该会看到您的光标移动到行的开头。<code>^E</code> (Ctrl+E) 将您带到末尾。您可以使用箭头键向前、向后移动，显示前一行或后一行，以便您可以重复代码。</p><p>如果您输入类似 <code>li</code> 的内容然后按 &quot;Tab&quot;，shell 将为您完成到 <code>lists:</code> 的术语。再次按 Tab 键，shell 将建议您在之后使用许多函数。这是 Erlang 完成模块 <code>lists</code> 然后建议来自它的函数。您可能会发现这种记法很奇怪，但别担心，您很快就会熟悉它。</p><p>我认为我们已经看到了足够多的 shell 功能，可以正常使用，只有一件事：我们不知道如何离开！有一个快速的方法可以找到方法。只需输入 <code>help().</code>，您应该会获得有关您可以在 shell 中使用的许多命令的信息（不要忘记句号 (<code>.</code>)，因为它对于命令运行是必需的）。我们将在后面的某个时间使用其中一些命令，但我们唯一关心的是为了退出而需要的一行是 <code>q() -- 退出 - init:stop() 的简写</code> 所以这是一种方法（实际上是两种方法）。但这在 shell 冻结的情况下无济于事！如果您注意到了，当您启动 shell 时，有一个关于“使用 <code>^G</code> 中断”的注释。让我们这样做，然后按 <code>h</code> 获取帮助！</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">User</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> switch</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> command</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">--</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">h</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">c</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [nn]      - connect to job</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">%%</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> c</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> I</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 每个工作都会有一个编号</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ，可连接到指定的工作</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">i</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [nn]      - interrupt job</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">%%</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> i</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> I</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  中断指定工作</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">k</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [nn]      - kill job</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">j</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">         -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> list</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> all</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> jobs</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">s</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [shell]     - start </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">local</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> shell</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> %%</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> s</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 开始一个新的shell工作，使用默认名称shell</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> %%</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> s</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Name</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 开始一个新的shell工作，使用指定名称</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">r</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [node [shell]] - start remote shell</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> %%</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> r</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">节点名@主机名</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> %%</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> r</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">节点名@主机名</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Na</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">q</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> quit</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> erlang</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> h</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">       -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> this</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> message</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">--</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果您输入 <code>i</code> 然后输入 <code>c</code>，Erlang 应该会停止当前正在运行的代码，并带您返回到响应式 shell。<code>j</code> 将为您提供正在运行的进程列表（数字后的星号表示这是您当前正在运行的任务），然后您可以使用 <code>i</code> 然后是数字来中断它。如果您使用 <code>k</code>，您将直接杀死 shell 而不是只是中断它。按 <code>s</code> 启动一个新的 shell。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Eshell</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> V5.7.2</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (abort </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">with</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ^G</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">1&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">\`</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> \`</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;OH NO THIS SHELL IS UNRESPONSIVE!!! *hits ctrl+G*&quot;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">User</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> switch</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> command</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">--</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">k</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">--</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">c</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Unknown</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> job</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">--</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">s</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">--</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">j</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">2*</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> {shell,start,[]}</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">--</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">c</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Eshell</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> V5.7.2</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (abort </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">with</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ^G</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">1&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">\`</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> \`</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;YESS!&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果您重新阅读帮助文本，您会注意到我们可以启动远程 shell。我现在不会详细介绍，但这应该让您了解 Erlang VM 除运行代码外还能做什么。现在，让我们开始吧（真正地）。</p><h2 id="不可变量" tabindex="-1"><a class="header-anchor" href="#不可变量"><span>不可变量</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>在函数式编程中，变量不能是可变的。这些 7 个表达式可以演示变量的基本行为（请注意，变量以大写字母开头）。</p></div><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> One</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">: </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">variable</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> &#39;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">One</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&#39;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> is</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> unbound</span></span>
<span class="line"><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> One</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span>
<span class="line"><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span></span>
<span class="line"><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Un</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Uno</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> One</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span>
<span class="line"><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span></span>
<span class="line"><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">4</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Two</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> One</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> One</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span>
<span class="line"><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2</span></span>
<span class="line"><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">5</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Two</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.        </span></span>
<span class="line"><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2</span></span>
<span class="line"><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">6</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Two</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Two</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">**</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> exception</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> error</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">: </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">no</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> match</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> of</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> right</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> hand</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> side</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> value</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 3</span></span>
<span class="line"><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">7</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> two</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">**</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> exception</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> error</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">: </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">no</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> match</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> of</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> right</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> hand</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> side</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> value</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>=</code> 运算符的这种行为是“模式匹配”的基础，许多函数式编程语言都有这种机制，尽管 Erlang 的实现方式通常被认为比其他方法更灵活和更完善。当我们访问本章中的元组和列表类型时，以及在接下来的章节中访问函数时，我们将更详细地了解模式匹配。</p><p>命令 1-7 还告诉我们，变量名必须以大写字母开头。命令 7 失败是因为单词 two 以小写字母开头。从技术上讲，变量也可以以下划线（&#39;_&#39;）开头，但按照惯例，它们的使用仅限于您不关心的值，但您觉得有必要记录它包含的内容。</p><p>您也可以拥有仅为下划线的变量。</p><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">10</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> _</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 14</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span>
<span class="line"><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">17</span></span>
<span class="line"><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">11</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> _</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">: </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">variable</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> &#39;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">_</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&#39;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> is</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> unbound</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>与任何其他类型的变量不同，它永远不会存储任何值。目前完全没有用，但是当我们需要它时，您就会知道它的存在。</p><h2 id="常用的函数" tabindex="-1"><a class="header-anchor" href="#常用的函数"><span>常用的函数</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>下列函数均仅在shell中可使用</p></div><h3 id="b" tabindex="-1"><a class="header-anchor" href="#b"><span>b</span></a></h3><blockquote><p><strong>b()</strong> − 打印当前变量绑定。</p></blockquote><p>定义一个名为 <strong>Str</strong> 的变量，其值为 <code>abcd</code>。然后 <strong>b()</strong> 用于显示所有绑定变量。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">3&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Str</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">abcd</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">.</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;abcd&quot;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">4&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> b</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Str</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> =</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">abcd</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ok</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="f" tabindex="-1"><a class="header-anchor" href="#f"><span>f</span></a></h3><blockquote><p><strong>f()</strong> − 删除所有当前变量绑定。</p><p><strong>f(x)</strong> − 删除特定变量的绑定</p></blockquote><p>定义一个名为 Str 的变量，其值为 abcd。然后使用 f()删除 Str 变量绑定。然后调用 b()，以确保绑定已成功删除。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">8&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Str</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">abcd</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">.</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;abcd&quot;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">9&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Str1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">xyz</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">.</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;xyz&quot;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">10&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> b</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Str</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> =</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">abcd</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Str1</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> =</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">xyz</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ok</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">11&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> f(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Str</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">).</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ok</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">12&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> b</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Str1</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> =</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">xyz</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ok</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="h" tabindex="-1"><a class="header-anchor" href="#h"><span>h</span></a></h3><blockquote><p><strong>h()</strong> − 打印在外壳程序中执行的所有命令的历史记录列表。</p></blockquote><p>打印在 shell 中执行的命令的历史记录</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">13&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> h</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">1:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> my_str</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> =</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">abcd</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">{</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">EXIT</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">,{{badmatch,&quot;abcd&quot;},
            [{erl_eval,expr,6,[{file,&quot;erl_eval.erl&quot;},{line,667}]},
             {shell,exprs,7,[{file,&quot;shell.erl&quot;},{line,893}]},
             {shell,eval_exprs,7,[{file,&quot;shell.erl&quot;},{line,849}]},
             {shell,eval_loop,4,[{file,&quot;shell.erl&quot;},{line,834}]}]}}</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">2:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Str</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> =</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">abcd</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">abcd</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">3:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Str</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> =</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">abcd</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">abcd</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">4:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> b</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ok</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">5:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Str1</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> =</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">xyz</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">xyz</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">6:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> f</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Str</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ok</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">7:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> b</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ok</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">8:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Str</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> =</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">abcd</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">abcd</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">9:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Str1</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> =</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">xyz</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">xyz</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">10:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> b</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ok</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">11:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> f</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Str</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ok</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">12:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> b</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ok</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ok</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="history" tabindex="-1"><a class="header-anchor" href="#history"><span><strong>history</strong></span></a></h3><blockquote><p><strong>history(N)</strong> − 将历史列表中保留的先前命令数设置为 N。返回先前的命令数。预设值是 20。</p></blockquote><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">14&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> history(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">5</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    .</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">20</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">15&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> h</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    .</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">10:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> b</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ok</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">11:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> f</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Str</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ok</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">12:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> b</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ok</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">13:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> h</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ok</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">14:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> history</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">5</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">20</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ok</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="e" tabindex="-1"><a class="header-anchor" href="#e"><span>e</span></a></h3><blockquote><p><strong>e(N)</strong> − 如果 N 为正，则重复命令 N。如果为负，则重复第 N 个先前的命令（即 e(-1)重复先前的命令）。</p></blockquote><p>将执行上一个命令，h()</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">16&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> e(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">).</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">11:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> f</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Str</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ok</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">12:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> b</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ok</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">13:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> h</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ok</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">14:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> history</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">5</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">20</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">15:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> h</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ok</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ok</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="启动erlang-shell" tabindex="-1"><a class="header-anchor" href="#启动erlang-shell"><span>启动Erlang Shell</span></a></h2><blockquote><p>启动 Erlang shell 并运行一个模块，同时定义一个宏 <code>DEBUG</code>，使得代码中与 <code>DEBUG</code> 相关的部分被编译和执行。</p></blockquote><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">erl</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -s</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> my_module</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> start</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -eval</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">-define(DEBUG).</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p><strong><code>erl</code></strong>：</p><ul><li>这是启动 Erlang shell 的命令。当你输入 <code>erl</code> 时，Erlang 的交互式 shell 会启动，并让你与 Erlang 系统进行交互。</li></ul></li><li><p><code>-sname xxx</code></p><ul><li>在本地主机上启动一个名为<code>xxx</code>的<code>Erlang</code>节点，节点名的形式为<code>Name@Host</code></li></ul></li><li><p><code>-noshell</code>:以不带 交互式的方式启动Erlang</p></li><li><p><strong><code>-s my_module start</code></strong>：</p><ul><li><p><code>-s</code> 选项表示启动一个 Erlang 模块中的函数。在这个例子中，它指定了 <code>my_module</code> 模块中的 <code>start</code> 函数。</p></li><li><p>当 Erlang shell 启动时，它会自动调用 <code>my_module:start()</code> 函数，执行模块中的启动逻辑。</p></li><li><p>如果 <code>my_module</code> 模块中有一个名为 <code>start/0</code> 的函数（即没有参数的 <code>start</code> 函数），那么这个函数会被执行。</p></li></ul></li><li><p><strong><code>-eval &quot;-define(DEBUG).&quot;</code></strong>：</p></li><li><p><code>-eval</code> 选项允许你在启动 Erlang shell 时评估一个 Erlang 表达式。你可以用它来定义宏、模块或执行任何其他的 Erlang 代码。</p></li><li><p>在这个例子中，<code>-define(DEBUG).</code> 用于在启动时定义一个宏 <code>DEBUG</code>。这个宏会在 Erlang 代码中传递给编译器，之后任何带有条件编译语句（比如 <code>-ifdef(DEBUG)</code>）的代码部分将会被包含在编译过程中。</p></li><li><p><code>erl -env ERL_LIBS &quot;.&quot;</code> 指定当前目录为额外的库搜索路径</p><ul><li><strong>代码搜索路径</strong>：Erlang 会在当前目录及其子目录中查找 <code>ebin/</code> 目录</li><li><strong>自动添加路径</strong>：找到的所有 <code>ebin/</code> 目录会自动添加到代码路径(code path)中</li><li>只搜索一级子目录中的 <code>ebin/</code> 目录</li></ul></li><li><p><code>-make</code></p><ul><li>执行 Erlang 的内置 make 功能</li><li>首先查找当前目录下的 <code>Emakefile</code> 文件,如果没有找到，则使用默认规则编译所有 <code>.erl</code> 文件</li></ul></li></ul><h2 id="erlang-shell-编译" tabindex="-1"><a class="header-anchor" href="#erlang-shell-编译"><span>Erlang Shell 编译</span></a></h2><h3 id="编译" tabindex="-1"><a class="header-anchor" href="#编译"><span>编译</span></a></h3><blockquote><p><code>c()</code> 是 Erlang shell 中的内置函数，用来编译 Erlang 源文件。它是通过 Erlang shell 动态执行编译的函数，通常用于在交互式开发环境中编译源代码。与 <code>erlc</code> 不同，<code>c()</code> 是直接在 Erlang shell 中使用的。</p></blockquote><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">c</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Module</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Options</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">lists</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">())</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> compiled_file</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  或者</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                             </span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">compile</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">file</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Module</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Options</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">lists</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()).</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>你也可以偷偷摸摸地从模块内部定义编译标志，使用模块属性。然后只需编译，你将获得与手动传递标志相同的结果。</p><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">compile</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">([</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">debug_info</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> export_all</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]).</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><p><strong>参数</strong></p><ul><li><p><code>Module</code>: <strong>模块名</strong></p></li><li><p><code>Options</code>：<strong>编译标志</strong></p><ul><li><code>outdir</code><ul><li><strong>功能</strong>：指定编译后 <code>.beam</code> 文件的输出目录。</li><li><strong>类型</strong>：<code>{outdir, Dir}</code>，其中 <code>Dir</code> 是目标输出目录的路径。</li><li><strong>说明</strong>：如果不使用该选项，<code>.beam</code> 文件将被输出到当前工作目录。</li></ul></li><li><code>d</code><ul><li><strong>功能</strong>：定义宏。</li><li><strong>类型</strong>：<code>{d, MacroName}</code> 或 <code>{d, MacroName, Value}</code>，其中 <code>MacroName</code> 是宏名，<code>Value</code> 是宏的值。</li><li><strong>说明</strong>：定义一个宏，使得代码中可以使用该宏。在编译时，如果某个模块中有预编译指令 <code>-define(MacroName, ...)</code>，可以通过此选项设置宏的值。</li></ul></li><li><code>i</code><ul><li><strong>功能</strong>：指定包含路径。</li><li><strong>类型</strong>：<code>{i, Dir}</code>，其中 <code>Dir</code> 是包含文件的目录。</li><li><strong>说明</strong>：该选项指定编译时查找包含文件的目录，类似于 C 语言中的 <code>#include</code> 语句，Erlang 会在指定的目录下查找相关文件。</li></ul></li><li><code>warnings_as_errors</code><ul><li><strong>功能</strong>：将警告视为错误。</li><li><strong>类型</strong>：<code>{warnings_as_errors, boolean()}</code>，可以设置为 <code>true</code> 或 <code>false</code>。</li><li><strong>说明</strong>：如果设置为 <code>true</code>，所有警告都将被视为错误，编译会失败。</li></ul></li><li><code>native</code><ul><li><strong>功能</strong>：启用本地代码编译。</li><li><strong>类型</strong>：<code>{native, true}</code> 或 <code>{native, false}</code>，表示是否启用本地代码编译。</li><li><strong>说明</strong>：如果设置为 <code>true</code>，编译器将会尝试将 Erlang 代码编译为本地代码以提高执行效率。</li></ul></li><li><code>inline</code><ul><li><strong>功能</strong>：启用内联优化。</li><li><strong>类型</strong>：<code>{inline, List}</code>，<code>List</code> 是一个包含函数名的列表，表示要内联的函数。</li><li><strong>说明</strong>：该选项告诉编译器将指定的函数进行内联优化，通常是为了提高性能。</li></ul></li><li><code>debug_info</code><ul><li><strong>功能</strong>：是否生成调试信息。</li><li><strong>类型</strong>：<code>{debug_info, boolean()}</code>，可以设置为 <code>true</code> 或 <code>false</code>。</li><li><strong>说明</strong>：如果设置为 <code>true</code>，编译器将会生成调试信息，便于在调试器中使用。如果设置为 <code>false</code>，则不会生成调试信息。</li></ul></li><li><code>warnings</code><ul><li><strong>功能</strong>：控制是否启用编译警告。</li><li><strong>类型</strong>：<code>{warnings, boolean()}</code>，可以设置为 <code>true</code> 或 <code>false</code>。</li><li><strong>说明</strong>：如果设置为 <code>false</code>，则会关闭警告信息。</li></ul></li><li><code>export_all</code><ul><li><strong>功能</strong>：是否导出所有函数。</li><li><strong>类型</strong>：<code>{export_all, boolean()}</code>，可以设置为 <code>true</code> 或 <code>false</code>。</li><li><strong>说明</strong>：如果设置为 <code>true</code>，编译器将自动将所有函数导出。</li></ul></li></ul></li></ul><h3 id="运行" tabindex="-1"><a class="header-anchor" href="#运行"><span>运行</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>模块名:函数名()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="设置载入代码的搜索路径" tabindex="-1"><a class="header-anchor" href="#设置载入代码的搜索路径"><span>设置载入代码的搜索路径</span></a></h3><blockquote><p>Erlang的运行时系统使用一种代码自动载入机制。要让它能正确工作，必须设置一些搜索路径来找到正确版本的代码。</p><p>当系统尝试调用的函数属于一个尚未加载的模块时，就会出现一个异常，系统会尝试寻找缺失模块的对象代码文件。如果缺失的模块名为<code>myMissingModule</code>，代码载入器就会在当前载入路径的所有目录里搜索一个名为<code>myMissingModule.beam</code>的文件。</p></blockquote><div class="hint-container tip"><p class="hint-container-title">提示</p><p>当您发现 <code>.beam</code> 文件存在于代码搜索路径但未被显式加载，却可以正常使用时，这种情况通常是由于 Erlang 的自动加载机制在起作用</p><ol><li><strong>自动按需加载机制</strong>： <ul><li>Erlang 虚拟机会在第一次调用模块函数时自动加载模块</li><li>这是通过 <code>code_server</code> 进程实现的透明加载机制</li></ul></li><li><strong>代码路径已正确设置</strong>： <ul><li>您的 <code>.beam</code> 文件位于 <code>code:get_path()</code> 返回的路径中</li><li>Erlang 运行时知道在哪里查找模块</li></ul></li></ol></div><h4 id="代码路径" tabindex="-1"><a class="header-anchor" href="#代码路径"><span>代码路径</span></a></h4><blockquote><p><code>Erlang</code> 虚拟机通过<strong>代码路径</strong>（<code>code path</code>）查找模块。如果 <code>xxx.beam</code> 文件位于代码路径中的某个目录，<code>Erlang</code> 可以加载它。</p></blockquote><ul><li>查询当前载入路径值</li></ul><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">spec</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> get_path</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Path</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> when</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">      Path</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Dir</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> file</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">filename</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()].</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>向路径的开头添加一个新目录DIR</li></ul><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">spec</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> code</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">add_patha</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Dir</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">true</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">|</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">error</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">bad_directory</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>向路径的结尾添加一个新目录DIR</li></ul><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">spec</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> code</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">add_pathz</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Dir</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">true</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">|</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">error</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">bad_directory</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>删除路径中的某个目录 <ul><li><strong>行为</strong>： <ul><li>从 Erlang 虚拟机的代码路径中移除指定的目录。</li><li>不会卸载已经加载的模块，但后续加载模块时，不会再从该目录查找。</li></ul></li><li><strong>返回值</strong>： <ul><li><code>true</code>：目录移除成功。</li><li><code>false</code>：目录不存在或无法移除。</li></ul></li></ul></li></ul><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">spec</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> del_path</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">NameOrDir</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> boolean</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{&#39;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">error</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&#39;,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> What</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> when</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">      NameOrDir</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Name</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Dir</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">      Name</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> atom</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">      Dir</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> file</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">filename</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">      What</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> &#39;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">bad_name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&#39;.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="虚拟机内存" tabindex="-1"><a class="header-anchor" href="#虚拟机内存"><span>虚拟机内存</span></a></h4><blockquote><p>如果 <code>xxxx</code> 模块已经加载到 <code>Erlang</code> 虚拟机中，即使删除了 <code>xxx.erl</code> 和 <code>xxx.beam</code> 文件，仍然可以调用 <code>xxx:yyy</code> 函数，直到虚拟机重启或显式卸载模块。</p></blockquote><ul><li>查看已加载模块列表</li></ul><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">spec</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> all_loaded</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [{</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Module</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Loaded</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}]</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> when</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">      Module</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> module</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">      Loaded</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> loaded_filename</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">().</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>检查某个模块是否被加载</li></ul><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">spec</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> is_loaded</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Module</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {&#39;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">file</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&#39;,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Loaded</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">false</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> when</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">      Module</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> module</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">      Loaded</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> loaded_filename</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">().</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>从代码路径中卸载指定的模块</li></ul><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">%% 从Erlang虚拟机中移除指定模块的BEAM文件，使其无法被调用。</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">spec</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> delete</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Module</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> boolean</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> when</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">      Module</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> module</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">().</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">%% 不仅删除模块的BEAM文件，还清空与该模块相关的所有代码和状态，确保没有任何残留。</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">spec</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> purge</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Module</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> boolean</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> when</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">      Module</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> module</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">().</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在启动<code>erlang shell</code>时添加搜索路径 <ul><li><code>-pa Dir</code>标识会把Dir添加到代码搜索路径的开头，</li><li><code>-pz Dir</code>则会把此目录添加到代码路径的末端。</li></ul></li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">erl</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -pa</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Dir1</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -pa</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Dir2....-pz</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Dir3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="erlang文件" tabindex="-1"><a class="header-anchor" href="#erlang文件"><span>.erlang文件</span></a></h4><blockquote><p>放置于当前项目的<strong>主目录</strong>下，在文件内部可编写<code>erlang</code>代码，在启动<code>Erlang Shell</code>时，它会首先读取并执行此文件里的所有命令</p><p>使用场景：添加代码搜索路径、设置环境变量或加载特定模块。</p></blockquote><ul><li>查询当前项目的主目录</li></ul><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">init</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">get_argument</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">home</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">%% 获取所有启动参数</span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">init</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">get_arguments</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>.erlang</code></li></ul><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">% 添加自定义模块路径</span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">code</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">add_patha</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/home/user/erlang_modules</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">% 设置环境变量</span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">os</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">setenv</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ERLANG_LOG_LEVEL</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">debug</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">% 自动加载某个应用</span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">application</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">load</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">mymodule</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="erlang-shell外编译" tabindex="-1"><a class="header-anchor" href="#erlang-shell外编译"><span>Erlang shell外编译</span></a></h2><h3 id="编译-erlc-命令" tabindex="-1"><a class="header-anchor" href="#编译-erlc-命令"><span>编译--<code>erlc</code> 命令</span></a></h3><blockquote><p><code>erlc</code> 是 Erlang 语言的命令行编译器，用来编译 <code>.erl</code> 文件（Erlang 源代码文件）并生成 <code>.beam</code> 文件（Erlang 编译后的字节码文件）。<code>erlc</code> 是一个外部命令，你需要在<strong>操作系统的命令行</strong>中使用它来编译代码。</p></blockquote><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">erlc</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [options] file.erl</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p><code>-o &lt;dir&gt;</code>: 指定输出目录。</p></li><li><p><code>-I &lt;dir&gt;</code>: 指定包含路径。</p></li><li><p><code>-D &lt;macro&gt;</code>: 定义宏</p></li></ul><h3 id="运行-1" tabindex="-1"><a class="header-anchor" href="#运行-1"><span>运行</span></a></h3><ul><li>加载了M模块并执行M:F函数。随后，它执行了<code>init:stop()</code>，这个表达式终止了Erlang会话。</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>erl -noshell -s M F -s init stop</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="用makefile使编译自动化" tabindex="-1"><a class="header-anchor" href="#用makefile使编译自动化"><span>用<code>makefile</code>使编译自动化</span></a></h2><h4 id="makefile模板" tabindex="-1"><a class="header-anchor" href="#makefile模板"><span><code>makefile</code>模板</span></a></h4><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>#别碰这几行</span></span>
<span class="line"><span>.SUFFIXES: .erl .beam .yrl</span></span>
<span class="line"><span></span></span>
<span class="line"><span>.erl.beam:</span></span>
<span class="line"><span>	erlc -w $&lt;</span></span>
<span class="line"><span>.yrl.erl:</span></span>
<span class="line"><span>	erlc -W $&lt;</span></span>
<span class="line"><span>	</span></span>
<span class="line"><span>ERL = erl -boot start_clean</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#这里是一个想要编译的Erlang模块列表。</span></span>
<span class="line"><span>#如果这些模块在一行里放不下，</span></span>
<span class="line"><span>#就在行尾添加一个\\字持然后在下一行继续。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#编辑下面这几行</span></span>
<span class="line"><span>MODS = module1 module2 \\</span></span>
<span class="line"><span>	module3 ... special1 ... \\</span></span>
<span class="line"><span>	...</span></span>
<span class="line"><span>	moduleN</span></span>
<span class="line"><span>	</span></span>
<span class="line"><span>#任何makefile里的第一个目标就是默认的目标。</span></span>
<span class="line"><span>#如果只输入了“make&quot;，，系统就会假定为&quot;make all&quot;。</span></span>
<span class="line"><span>#（因为&quot;all&quot;是这个makefile里的第一个目标）</span></span>
<span class="line"><span></span></span>
<span class="line"><span>all: compile</span></span>
<span class="line"><span></span></span>
<span class="line"><span>compile: \${M0DS:%=%.beam} subdirs</span></span>
<span class="line"><span></span></span>
<span class="line"><span>##此处添加特殊的编译要求</span></span>
<span class="line"><span></span></span>
<span class="line"><span>speciall.beam: special1.erl</span></span>
<span class="line"><span>	\${ERL} -Dflag1 -W0 special1.erl</span></span>
<span class="line"><span>	</span></span>
<span class="line"><span>#从makefile里运行应用程序</span></span>
<span class="line"><span></span></span>
<span class="line"><span>application1: compile</span></span>
<span class="line"><span>	\${ERL} -pa Dir1 -s application1 start Arg1 Arg2</span></span>
<span class="line"><span>	</span></span>
<span class="line"><span>subdir目标会编译子目录里的代码</span></span>
<span class="line"><span>#sub-directories</span></span>
<span class="line"><span></span></span>
<span class="line"><span>subdirs:</span></span>
<span class="line"><span>	cd dir1; $(MAKE)</span></span>
<span class="line"><span>	cd dir2; $(MAKE)</span></span>
<span class="line"><span>	...</span></span>
<span class="line"><span>#移除所有代码</span></span>
<span class="line"><span>clean:</span></span>
<span class="line"><span>    rm -rf *.beam erl_crash.dump</span></span>
<span class="line"><span>    cd dir1; $(MAKE) clean</span></span>
<span class="line"><span>    cd dir2; $(MAKE) clean</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="作为escript运行" tabindex="-1"><a class="header-anchor" href="#作为escript运行"><span>作为Escript运行</span></a></h2><blockquote><p>可以用escript来让程序直接作为脚本运行，无需事先编译它们</p></blockquote><ul><li>编写文件<code>hello</code></li></ul><div class="language-elixir line-numbers-mode" data-highlighter="shiki" data-ext="elixir" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#！/usr/bin/env escript</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">Args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">	io</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">format</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Hello world Args ~n</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>运行</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>./hello erlang</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,103)]))}const d=i(h,[["render",k]]),r=JSON.parse('{"path":"/backend/erlang/v9gm314p/","title":"erlang_shell","lang":"zh-CN","frontmatter":{"title":"erlang_shell","createTime":"2025/03/22 16:05:22","permalink":"/backend/erlang/v9gm314p/"},"headers":[],"readingTime":{"minutes":14.29,"words":4288},"git":{"updatedTime":1758260391000,"contributors":[{"name":"舒永好","username":"舒永好","email":"shuyonghao@guoshenghuaxing.com","commits":1,"avatar":"https://gravatar.com/avatar/4b1c3f37ea707968be73c631a79de33afd360724ce87bf8f9dcacd67d14df92c?d=retro"},{"name":"syh","username":"syh","email":"syh@qq.com","commits":6,"avatar":"https://gravatar.com/avatar/060d67e779a1b0aeace68a2a010b367f852e56888393383ea27302df983f6814?d=retro"}]},"filePathRelative":"notes/backend/erlang/erlang_foundation/erlang_shell.md"}');export{d as comp,r as data};
