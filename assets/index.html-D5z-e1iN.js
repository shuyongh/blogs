import{_ as a,c as t,a as o,o as s}from"./app-C7T5jqfQ.js";const c={};function r(p,e){return s(),t("div",null,e[0]||(e[0]=[o('<p>章将解释什么是 Websocket，以及它是软实时 Web 应用程序的重要组成部分的原因。</p><h2 id="描述" tabindex="-1"><a class="header-anchor" href="#描述"><span>描述</span></a></h2><p>Websocket 是 HTTP 的一个扩展，它在客户端，通常是 Web 浏览器，和服务器之间模拟了普通的 TCP 连接。它使用 HTTP 升级机制来建立连接。</p><p>Websocket 连接是完全异步的，与 HTTP/1.1（同步）和 HTTP/2（异步，但服务器只能在响应请求时发起流）不同。使用 Websocket，客户端和服务器都可以在任何时间发送帧而没有任何限制。它比任何 HTTP 协议都更接近 TCP。</p><p>Websocket 是一个 IETF 标准。Cowboy 支持该标准以及之前浏览器实现的所有草案，但不包括有时被称为“版本 0”的最初有缺陷的草案。</p><h2 id="websocket-vs-http-2" tabindex="-1"><a class="header-anchor" href="#websocket-vs-http-2"><span>Websocket vs HTTP/2</span></a></h2><p>在 Websocket 出现的几年里，它是唯一一种可以与服务器进行双向异步连接的方式。当 HTTP/2 引入时，这种情况发生了变化。虽然 HTTP/2 要求客户端首先发出请求，然后服务器才能推送数据，但这只是一个轻微的限制，因为客户端在连接时可以立即执行此操作。</p><p>Websocket 是一种面向服务器的类似 TCP 通道。它只定义了帧和连接管理，并允许开发人员在其上实现协议。例如，你可以使用 Websocket 实现 IRC，并使用 JavaScript IRC 客户端与服务器通信。</p><p>另一方面，HTTP/2 只是对 HTTP/1.1 连接和请求/响应机制的一种改进。它与 HTTP/1.1 的语义相同。</p><p>如果你只需要访问 HTTP API，那么 HTTP/2 应该是你的首选。另一方面，如果你需要的是不同的协议，那么你可以使用 Websocket 来实现。</p><h2 id="实现" tabindex="-1"><a class="header-anchor" href="#实现"><span>实现</span></a></h2><p>Cowboy 将 Websocket 实现为协议升级。一旦在 <code>init/2</code> 回调中执行了升级，Cowboy 就会切换到 Websocket。请参阅下一章以获取更多关于启动和处理 Websocket 连接的信息。</p><p>Cowboy 中 WebSocket 的实现是通过 Autobahn 测试套件验证的，这是一个涵盖协议各方面内容的广泛测试套件。Cowboy 通过了 100%的成功测试，包括所有可选测试。</p><p>Cowboy 的 WebSocket 实现还包括 permessage-deflate 和 x-webkit-deflate-frame 压缩扩展。</p><p>当 <code>compress</code> 选项在 <code>init/2</code> 函数中返回时，Cowboy 会自动使用压缩。</p>',15)]))}const n=a(c,[["render",r]]),d=JSON.parse('{"path":"/backend/erlang/3phrbaf9/","title":"websocket协议","lang":"zh-CN","frontmatter":{"title":"websocket协议","createTime":"2025/03/28 11:44:07","permalink":"/backend/erlang/3phrbaf9/"},"headers":[],"readingTime":{"minutes":2.03,"words":608},"git":{"updatedTime":1743158971000,"contributors":[{"name":"syh","username":"syh","email":"syh@qq.com","commits":1,"avatar":"https://gravatar.com/avatar/060d67e779a1b0aeace68a2a010b367f852e56888393383ea27302df983f6814?d=retro"}]},"filePathRelative":"notes/backend/erlang/rebar3/cowboy/websocket/websocket_protocol.md"}');export{n as comp,d as data};
