import{_ as s,c as a,a as e,o as l}from"./app-C7T5jqfQ.js";const n="/blogs/assets/image-20230928224106156-CB2m1oCR.png",h="/blogs/assets/image-20230928224121576-P5tlgX8F.png",t="/blogs/assets/image-20230927195730140-DhCKB2iB.png",d="/blogs/assets/image-20230927200020878-CoqOAzMT.png",p="/blogs/assets/image-20230201211109766-BvQzvdfH.png",r="/blogs/assets/image-20230201211610436-CMOMob6E.png",k="/blogs/assets/image-20230201213634792-DqX5n_on.png",c="/blogs/assets/image-20230201234436529-ZiTohp-4.png",g="/blogs/assets/image-20230202000440150-uYmV__zD.png",u="/blogs/assets/image-20230202095040405-hIVSDAhe.png",o="/blogs/assets/image-20230202100131766-DDOdbSvI.png",v={};function m(b,i){return l(),a("div",null,i[0]||(i[0]=[e(`<h2 id="服务管理" tabindex="-1"><a class="header-anchor" href="#服务管理"><span>服务管理</span></a></h2><h3 id="service" tabindex="-1"><a class="header-anchor" href="#service"><span>service</span></a></h3><ul><li><strong>service命令本身是一个shell脚本，它在<code>/etc/init.d/</code>目录查找指定的服务脚本，然后调用该服务脚本来完成任务。</strong></li><li>service运行指定服务（称之为System V init脚本）时，把大部分环境变量去掉了，只保留LANG和TERM两个环境变量，并且把当前路径置为/，也就是说是在一个可以预测的非常干净的环境中运行服务脚本。这种脚本保存在/etc/init.d目录中，它至少要支持start和stop命令。</li><li>service命令其实是去<code>/etc/init.d</code>目录下，去执行相关程序，如下所示：</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># service命令启动redis脚本</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">service</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> redis</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> start</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 直接启动redis脚本</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">/etc/init.d/redis</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> start</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 开机自启动</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">update-rc.d</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> redis</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> defaults</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="systemctl" tabindex="-1"><a class="header-anchor" href="#systemctl"><span>systemctl</span></a></h3><ul><li>systemctl是RHEL 7 的服务管理工具中主要的工具，它融合之前service和chkconfig的功能于一体。可以使用它永久性或只在当前会话中启用/禁用服务。</li><li>systemd有系统和用户区分；系统（/user/lib/systemd/system/）、用户（/etc/lib/systemd/user/），一般系统管理员手工创建的单元文件建议存放在/etc/systemd/system/目录下面</li></ul><h4 id="服务文件描述" tabindex="-1"><a class="header-anchor" href="#服务文件描述"><span>服务文件描述</span></a></h4><h4 id="_1-unit" tabindex="-1"><a class="header-anchor" href="#_1-unit"><span>1.[Unit]</span></a></h4><ul><li>Description : 服务的简单描述</li><li>Documentation ： 服务文档</li><li>Before、After:定义启动顺序。Before=xxx.service,代表本服务在xxx.service启动之前启动。After=xxx.service,代表本服务在xxx.service之后启动。</li><li>Requires：这个单元启动了，它需要的单元也会被启动；它需要的单元被停止了，这个单元也停止了。</li><li>Wants：推荐使用。这个单元启动了，它需要的单元也会被启动；它需要的单元被停止了，对本单元没有影响。</li></ul><h4 id="_2-service" tabindex="-1"><a class="header-anchor" href="#_2-service"><span>2.[Service]</span></a></h4><ul><li><p>Tyep</p><ul><li><p>Type=simple（默认值）：systemd认为该服务将立即启动。服务进程不会fork。如果该服务要启动其他服务，不要使用此类型启动，除非该服务是socket激活型。</p></li><li><p>Type=forking：systemd认为当该服务进程fork，且父进程退出后服务启动成功。对于常规的守护进程（daemon），除非你确定此启动方式无法满足需求，使用此类型启动即可。使用此启动类型应同时指定 PIDFile=，以便systemd能够跟踪服务的主进程。</p></li><li><p>Type=oneshot：这一选项适用于只执行一项任务、随后立即退出的服务。可能需要同时设置 RemainAfterExit=yes 使得 systemd 在服务进程退出之后仍然认为服务处于激活状态。</p></li><li><p>Type=notify：与 Type=simple 相同，但约定服务会在就绪后向 systemd 发送一个信号。这一通知的实现由 libsystemd-daemon.so 提供。</p></li><li><p>Type=dbus：若以此方式启动，当指定的 BusName 出现在DBus系统总线上时，systemd认为服务就绪。</p></li><li><p>Type=idle: systemd会等待所有任务(Jobs)处理完成后，才开始执行idle类型的单元。除此之外，其他行为和Type=simple 类似。</p></li></ul></li><li><p><strong>PIDFile：pid文件路径</strong></p></li><li><p><strong>ExecStart：指定启动单元的命令或者脚本</strong>，ExecStartPre和ExecStartPost节指定在ExecStart之前或者之后用户自定义执行的脚本。Type=oneshot允许指定多个希望顺序执行的用户自定义命令。</p></li><li><p><strong>ExecReload：指定单元停止时执行的命令或者脚本。</strong></p></li><li><p><strong>ExecStop：指定单元停止时执行的命令或者脚本。</strong></p></li><li><p><strong>PrivateTmp：True表示给服务分配独立的临时空间</strong></p></li><li><p>Restart：这个选项如果被允许，服务重启的时候进程会退出，会通过systemctl命令执行清除并重启的操作。</p></li><li><p>RemainAfterExit：如果设置这个选择为真，服务会被认为是在激活状态，即使所以的进程已经退出，默认的为假，这个选项只有在Type=oneshot时需要被配置。</p></li></ul><h4 id="_3-install" tabindex="-1"><a class="header-anchor" href="#_3-install"><span>3.[Install]</span></a></h4><ul><li>Alias：为单元提供一个空间分离的附加名字。</li><li>RequiredBy：单元被允许运行需要的一系列依赖单元，RequiredBy列表从Require获得依赖信息。</li><li>WantBy：单元被允许运行需要的弱依赖性单元，Wantby从Want列表获得依赖信息。</li><li>Also：指出和单元一起安装或者被协助的单元。</li><li>DefaultInstance：实例单元的限制，这个选项指定如果单元被允许运行默认的实例。</li></ul><h4 id="相关命令" tabindex="-1"><a class="header-anchor" href="#相关命令"><span>相关命令</span></a></h4><ul><li>重载服务</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>journalctl -f 服务名</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>刚刚配置的服务需要让systemctl能识别，就必须刷新配置</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>systemctl daemon-reload</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>查看已启动的服务列表：</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>systemctl list-unit-files|grep enabled</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>查看启动失败的服务列表：</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>systemctl --failed</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h4><p>nginx</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">root@master </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">~</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"># vim /user/lib/systemd/system/nginx.service</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Unit</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Description</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">nginx</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> high</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> performance</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> web</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> server</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Documentation</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">http://nginx.org/en/docs/</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">After</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">network.target</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> remote-fs.target</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nss-lookup.target</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Service</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Type</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">forking</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">PIDFile</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/run/nginx.pid</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">ExecStartPre</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/usr/sbin/nginx</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> -t</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -c</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /etc/nginx/nginx.conf</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">ExecStart</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/usr/sbin/nginx</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> -c</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /etc/nginx/nginx.conf</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">ExecReload</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/bin/kill</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> -s</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> HUP</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> $MAINPID</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">ExecStop</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/bin/kill</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> -s</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> QUIT</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> $MAINPID</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">PrivateTmp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">true</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Install</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">WantedBy</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">multi-user.target</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="日期函数" tabindex="-1"><a class="header-anchor" href="#日期函数"><span>日期函数</span></a></h2><ul><li>获取今天日期</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>date +%Y%m%d</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>获取昨天日期</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>date -d yesterday +%Y%m%d</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>获取前天日期</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>date -d -2day +%Y%m%d</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>获取10天前的日期</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>date -d -2day +%Y%m%d</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>获取明天的日期</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>date -d -2day +%Y%m%d</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="`+n+'" alt="image-20230928224106156"></p><p><img src="'+h+'" alt="image-20230928224121576"></p><h2 id="防火墙" tabindex="-1"><a class="header-anchor" href="#防火墙"><span>防火墙</span></a></h2><ul><li>查看所有已开放的端口</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>firewall-cmd --list-all</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>关闭防火墙</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>systemctl stop firewalld</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>禁止防火墙开机启动</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>systemctl disable firewalld</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>查询防火墙中的端口是否开放</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>firewall-cmd --query-port=80/tcp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>放行端口</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>firewall-cmd  --permanent --add-port=80/tcp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>移除一个指定的端口</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>firewall-cmd --permanent --remove-port=9003/tcp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>重新加载</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>firewall-cmd --reload</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="定时任务" tabindex="-1"><a class="header-anchor" href="#定时任务"><span>定时任务</span></a></h2><h3 id="crontab命令" tabindex="-1"><a class="header-anchor" href="#crontab命令"><span>crontab命令</span></a></h3><ul><li><p>crontab是用来定期执行程序的命令，当安装完成操作系统之后，默认便会启动此任务调度命令</p></li><li><p>crond命令每分钟会定期检查是否有要执行的工作，如果有要执行的工作便会自动执行该工作</p></li><li><p>新创建的cron任务，不会马上执行，至少要过2分钟后才可以，当然可以重启cron来马上执行</p></li><li><p>Linux任务调度的工作主要分为两类</p><ul><li>系统执行的工作：系统魔法卡的性所要执行的工作，如备份系统数据、清理缓存</li><li>个人执行的工作，某个用户定期要做的工作，这些工作可由每个用户自行设置</li></ul></li><li><p>语法<code>crontab [-u user] {-l | -r | -e}</code></p><ul><li>-u user:指定user的时程表，如果不使用，则表示设定自己的时程表</li><li>-e:执行文字编辑器来设定时程表，空定的文字编辑器是VI</li><li>-r：删除目前的时程表</li><li>-l：列出目前的时程表</li></ul></li><li><p><strong>时间格式</strong></p><ul><li>当 f1 为 * 时表示每分钟都要执行 program，f2 为 * 时表示每小时都要执行程序，其馀类推</li><li>当 f1 为 a-b 时表示从第 a 分钟到第 b 分钟这段时间内要执行，f2 为 a-b 时表示从第 a 到第 b 小时都要执行，其馀类推</li><li>当 f1 为 */n 时表示每 n 分钟个时间间隔执行一次，f2 为 */n 表示每 n 小时个时间间隔执行一次，其馀类推</li><li>当 f1 为 a, b, c,... 时表示第 a, b, c,... 分钟要执行，f2 为 a, b, c,... 时表示第 a, b, c...个小时要执行，其馀类推</li></ul></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>f1 f2 f3 f4 f5 program</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="'+t+'" alt="image-20230927195730140"></p><ul><li>实例</li></ul><p><img src="'+d+`" alt="image-20230927200020878"></p><h2 id="alias命令" tabindex="-1"><a class="header-anchor" href="#alias命令"><span>alias命令</span></a></h2><ul><li>可以给使用频率非常高而且名字很冗长的命令，起一个简单易于记忆的别名，之后就可以输入这个别名来代替并执行它了</li></ul><p>语法<code>alias 别名=“原命令”</code></p><ul><li>取消别名：语法<code>unalias 别名</code></li></ul><h2 id="fork函数" tabindex="-1"><a class="header-anchor" href="#fork函数"><span>fork函数</span></a></h2><ul><li>fork调用的一个奇妙之处就是仅仅被<strong>调用一次，却能够返回两次</strong>，可能有三种不同的返回值 <ul><li>父进程中，fork返回新创立产子进程的进程ID</li><li>子进程中，fork返回0</li><li>如果呈现过失，fork返回一个负值</li></ul></li></ul><h2 id="systemctl命令" tabindex="-1"><a class="header-anchor" href="#systemctl命令"><span>systemctl命令</span></a></h2><p>1、Linux系统 很多办的（内置或第三方）均支持使用systemctl命令控制：启动、停止、开机自启</p><p>2、能够被 systemctl管理的软件 ，一般也称之为：服务</p><p>语法：<code>systemctl start | stop | status | enable |disable 服务名</code></p><ul><li>start:启动</li><li>stop：关闭</li><li>status：查看状态</li><li>enable：开启开机自启</li><li>disable：关闭开机自启</li></ul><p>3、系统内置的服务比较多，如：</p><ul><li>NetworkManager，主网络服务</li><li>network，副网络服务</li><li>firewalld，防火墙服务</li><li>sshd,ssh服务</li></ul><p>4、部分软件 安装 后没有自动集成到systemctl中，我们可以手动添加</p><h2 id="date命令" tabindex="-1"><a class="header-anchor" href="#date命令"><span>date命令</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>date +&quot;%F %T&quot;</span></span>
<span class="line"><span>2023-01-01 12:00:00</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>1、通过date命令可以在命令行中查看系统 的时间</p><p>语法：date [-d] [+格式化字符串]</p><ul><li>-d，按照给定的字符串显示 日期，一般用于日期计算 <ul><li><img src="`+p+'" alt="image-20230201211109766"></li><li>其中支持的时间标记为 <ul><li>year</li><li>month</li><li>day</li><li>hour</li><li>minute</li><li>second</li></ul></li></ul></li><li>格式化字符串：通过特定的字符串标记，来控制 显示 的日期格式 <ul><li>%Y:年</li><li>%y：年份后两位数字</li><li>%M：月份</li><li>%d：日</li><li>%H：小时</li><li>%M：分钟</li><li>%S：秒</li><li>%s：自1970-01-01到现在的秒数</li></ul></li></ul><p><strong>2、修改Linux时区</strong></p><p><img src="'+r+`" alt="image-20230201211610436"></p><p><strong>3、ntp程序</strong></p><p>可以通过ntp程序 自动校准系统 时间，</p><p>3.1、安装ntp,yum -y install ntp</p><p>3.2、启动并设置开机自启:systemctl start ntpd</p><p>当ntpd启动后会定期的帮助我们联网校准系统的时间</p><p>也可以手动校准：ntpdate -u ntp.aliyun.com</p><h2 id="ip地址" tabindex="-1"><a class="header-anchor" href="#ip地址"><span>IP地址</span></a></h2><ul><li><p>可以通过命令：ifconfig,查看本机的ip地址，如无法使用ifonfig命令，可以安装 ：yum -y install net-tools</p></li><li><p>信息显示分为两部分：eth12和lo</p><ul><li>eth12的物理网卡的名称</li><li>lo是虚拟的loopback接口设备，基地址为127.0.0.1</li></ul></li></ul><p>2、特殊ip地址</p><ul><li><p>127.0.0.1</p><ul><li>用于指代本机</li></ul></li><li><p>0.0.0.0</p><ul><li>可以用于指代本机</li><li>可以在端口 绑定中用来确定绑定关系</li><li>在一些ip地址限制 中，表示所有ip的意思 ，如放行规则 设置为0.0.0.0，表示 允许任意ip访问</li></ul></li><li><p><strong>单网卡添加或删除IP地址</strong></p></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>添加 ifconfig ens33:0 192.168.0.1 boradcast 192.168.0.255 netmask 255.255.255.0 up</span></span>
<span class="line"><span>删除 ifconfig ens33:1 192.168.0.1 boradcast 192.168.0.255 netmask 255.255.255.0 down</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>启动、关闭指定网卡</strong></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>ifconfig ens33 up      #启动eth0网卡</span></span>
<span class="line"><span>ifconfig ens33 down    #关闭eth0网卡</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ip命令" tabindex="-1"><a class="header-anchor" href="#ip命令"><span>IP命令</span></a></h3><p><code>语法ip [OPTIONS] OBJECT {COMMAND | HELP}</code></p><ul><li>常用参数 <ul><li>-r:显示主机时，不使用IP地址，而使用主机的域名</li><li>-f：强制使用挖宝的协议族</li><li>-4：指定使用的网络层协议是IPV4</li><li>-6：指定使用的网络层协议是IPV6</li></ul></li><li>相关配置 <ul><li>-4:指定使用的网络层协议是Ipv4 协议</li><li>-6：指定使用的网络层协议是Ipv6协议</li><li>-r：显示主机时，不使用IP地址，而使用主机的域名</li><li>ip addr show 显示网卡信息</li><li>ip link show 显示网络接口信息</li><li>ip link set eth0 up 开启网卡</li><li>ip link set etho down 关闭网卡</li><li>ip addr add 192.138.0.1/24 dev eth0 设置eth0网卡Ip地址192.168.0.1</li><li>ip route show 显示系统路由</li><li>ip route list 查看路由信息</li><li>ip route add default via 192.168.1.254 设置系统默认路由</li></ul></li></ul><h3 id="主机名" tabindex="-1"><a class="header-anchor" href="#主机名"><span>主机名</span></a></h3><p>每一台电脑 除了对外 联络地址（ip地址）以外，也可以有一个名字外，称之为主机名</p><p>1、修改主机名</p><ul><li>可以使用命令：hostname查看主机名</li><li>可以使用命令：hostnamectl set-hostname 修改主机名</li></ul><h3 id="域名解析" tabindex="-1"><a class="header-anchor" href="#域名解析"><span>域名解析</span></a></h3><p><img src="`+k+'" alt="image-20230201213634792"></p><p>当访问www.baidu.com时</p><ul><li>先查看本机的记录（私人地址本） <ul><li>Windows：C:\\Windows\\System32\\drivers\\etc\\hosts</li><li>Linux：/etc/hosts</li></ul></li><li>再联网支DNS服务器(如114.114.114.114，8.8.8.8)询问</li></ul><h3 id="dns配置" tabindex="-1"><a class="header-anchor" href="#dns配置"><span>DNS配置</span></a></h3><ul><li>域名服务器是指保存有该网络中所有主机的域名和对应IP地址，并具有将域名转换为IP地址功能的服务器，其中域名必须对应一个IP地址，而IP地址不一定只对应一个域名</li><li><code>DNS配置信息保存在/etc/resolv.conf</code>文件中，主要用途是确定由哪一个域名解析服务器来进行域名的解析功能 <ul><li>关键字</li><li>nameserver:用于指定DNS服务器的IP地址，第个nameserver对应一个DNS服务器，可以有多个namceserver ,每个单独占据一行，但一般不超过3个(依据MAXNS变量)</li><li>domain：用于指定默认情况下使用的本地域名</li><li>search：用于指定执行地址查询时使用的域名检索表，默认情况下本地域名</li></ul></li><li>利用<code>/etc/hosts</code>文件实现从名字到地址的转换</li></ul><h2 id="端口" tabindex="-1"><a class="header-anchor" href="#端口"><span>端口</span></a></h2><p>1、端口，是设备与外界通讯交流的出入 口，端口可以分为：物理端口和虚拟端口两类</p><ul><li>物理端口：又称之为接口，是可见的端口，如USB接口。。。</li><li>虚拟端口：是指计算机内部的端口，是不可见的，是用来操作系统 和外部进行交互使用的</li></ul><p>2、标识 正在计算机设备上运行的进程（程序 ），被 规定为一个16位的二进制，应用程序在计算机中的唯一标识</p><p>3、端口类型</p><ul><li>公认端口：0-1023，通常用于一些系统 内置或知名应用占用（如HTTP占用80）</li><li>注册端口：1024-49151分配给用户进行进程或某些应用程序</li><li>动态端口：49152-65536之后所有称为动态端口，是因为它一般不固定分配某种进程，而是动态分配，当程序 对外 进行网络链接时，用于临时使用</li></ul><h3 id="查看端口" tabindex="-1"><a class="header-anchor" href="#查看端口"><span>查看端口</span></a></h3><p>1、使用nmap命令，安装nmap：yum -y install nmap</p><p>语法：nmap 被查看的ip地址</p><h3 id="netstat命令" tabindex="-1"><a class="header-anchor" href="#netstat命令"><span>netstat命令</span></a></h3><p>使用netstat命令，查看指定端口的占用情况</p><p><code>语法：netstat -anp|grep 端口号</code></p><p>安装netstat :yum -y install net-tools</p><h2 id="进程" tabindex="-1"><a class="header-anchor" href="#进程"><span>进程</span></a></h2><p>1、程序运行在操作系统 中，是被 操作系统 所管理的，为管理运行的程序 ，每一个程序 在运行的时候，便被 操作系统 注册为系统 中的一个进程，并会为每一个进程都分配一个独有的：进程ID（进程号）</p><h3 id="查看进程" tabindex="-1"><a class="header-anchor" href="#查看进程"><span>查看进程</span></a></h3><p>通过ps命令查看Linux系统 中的进程信息</p><p>语法：ps [-e -f]</p><ul><li>-e，显示出全部的进程</li><li>-f，以完全格式化的形式展示信息（展示全部信息）</li></ul><p>一般来说，固定用法就是：ps -ef列出全部进程的全部信息</p><p><img src="'+c+'" alt="image-20230201234436529"></p><p>从左到右分别 是</p><ul><li>UID:进程专属的用户ID</li><li>PID：进程的进程号ID</li><li>PPID：进程的父ID（启动此进程的其它进程）</li><li>C：此进程的CPU占用率（百分比）</li><li>STIME：进程的启动时间</li><li>TTY：启动此进程的终端序号，如显示？，表示非终端启动</li><li>TIME：进程占用CPU的时间</li><li>CMD：进程对应的名称或启动路径或启动命令</li></ul><h3 id="关闭进程" tabindex="-1"><a class="header-anchor" href="#关闭进程"><span>关闭进程</span></a></h3><p>可以通过kill命令关闭进程</p><p>语法：kill [-9] 进程ID</p><ul><li>-9，表示 强制关闭进程。不使用此选项会向进程发送信号要求关闭，但是否关闭看进程自身的处理机制</li></ul><h2 id="查看系统资源占用" tabindex="-1"><a class="header-anchor" href="#查看系统资源占用"><span>查看系统资源占用</span></a></h2><p>1、通过top命令查看CPU，内存使用情况，类似于Windows的任务管理器</p><p><img src="'+g+'" alt="image-20230202000440150"></p><p>top交互式选项</p><p><img src="'+u+'" alt="image-20230202095040405"></p><h2 id="磁盘信息监控" tabindex="-1"><a class="header-anchor" href="#磁盘信息监控"><span>磁盘信息监控</span></a></h2><h3 id="df命令" tabindex="-1"><a class="header-anchor" href="#df命令"><span>df命令</span></a></h3><p>1、使用df命令，可以查看硬盘的使用情况</p><p>语法：df [-h]</p><ul><li>-h，以更加人性化的单位显示</li></ul><h3 id="iostat命令" tabindex="-1"><a class="header-anchor" href="#iostat命令"><span>iostat命令</span></a></h3><p>2、使用iostat查看CPU、磁盘的相关信息</p><p>就去：iostat [-x] [num1] [num2]</p><ul><li>-x,显示更多信息</li><li>num1：数字，刷新间隔，num2：数字 ，刷新 几次</li></ul><h3 id="free命令" tabindex="-1"><a class="header-anchor" href="#free命令"><span>free命令</span></a></h3><ul><li>用户可以通过使用free命令查看系统物理内存和交换分区的大小，以及已使用的，空闲的，共享的内存大小和缓存，高速缓存的信息</li></ul><h2 id="网络状态监控" tabindex="-1"><a class="header-anchor" href="#网络状态监控"><span>网络状态监控</span></a></h2><p>可以使用sar命令查看网络的相关统计</p><p><img src="'+o+`" alt="image-20230202100131766"></p><p>语法：sar -n DEV num1 num2</p><ul><li>-n,查看网络，DEV表示查看网络接口</li><li>num1，刷新间隔，num2：查看次数</li></ul><h2 id="网络传输" tabindex="-1"><a class="header-anchor" href="#网络传输"><span>网络传输</span></a></h2><h3 id="ping命令" tabindex="-1"><a class="header-anchor" href="#ping命令"><span>ping命令</span></a></h3><p>可以通过ping命令，检查 指定的网络服务器是否是可联通状态</p><p>语法：ping [-c num] ip或主机名</p><ul><li>选项：-c，检查的次数，不使用-c选项，将无限次持续检查</li><li>参数：ip或主机名，被 检查 的服务器的ip地址或主机名地址</li></ul><h3 id="wget命令" tabindex="-1"><a class="header-anchor" href="#wget命令"><span>wget命令</span></a></h3><p>wget是非交互式的文件下载器，可以在命令行内下载网络文件</p><p>语法：wget [-b] url</p><ul><li>选项：-b，可选，后台下载，会将日志写入到当前 工作目录的wget-log文件 <ul><li>通过tail命令可以疾控后台下载进度：tail -f wget-log</li></ul></li><li>参数：url,下载链接</li></ul><h3 id="curl命令" tabindex="-1"><a class="header-anchor" href="#curl命令"><span>curl命令</span></a></h3><p>curl可以发送http网络请求，可用于：下载文件，获取 信息等</p><p>可以向cip.cc（查询公网ip地址）发起网络请求</p><p>语法：curl [-O] url</p><ul><li>-O,用于下载文件，当url是下载链接时，可以使用此选项保存文件</li><li>url，要发起请求的网络地址</li></ul><h4 id="常用参数" tabindex="-1"><a class="header-anchor" href="#常用参数"><span>常用参数</span></a></h4><p>PS: (H) 表示只给 HTTP/HTTPS请求使用，(F) 表示只给 FTP请求使用。</p><ul><li>Show Info</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-h/--help</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">                       # 打印帮助信息</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-V/--version</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">                    # 显示版本信息</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-s/--silent</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">                     # 静默模式, 不输出任何内容</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-i/--include</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">                    # 输出包含 headers 信息</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-v/--verbose</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">                    # 输出详细内容</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-#/--progress-bar</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">               # 以进度条方式显示传输过程</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Headers</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-H/--header</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">     LINE</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        (H) </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 添加请求头, 可添加多个 -H 参数, </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">                                # 参数格式: -H &quot;NAME: VALUE&quot;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-A/--user-agen</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  STRING</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      (H) </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 请求头的 User-Agent 字段</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-e/--referer</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    URL</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">         (H) </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 请求头的 Referer 字段</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-r/--range</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">      RANGE</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">       (H) </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 请求头的 Range 字段</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-b/--cookie</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">     STRING/FILE</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (H) </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 请求头的 Cookie 字段, 以字符串的形式提供, </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">                                # 或从指定 cookie 文件中读取</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-c/--cookie-jar</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">     FILE</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    (H) </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 把响应头中的 cookie 保存到指定文件</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-D/--dump-header</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    FILE</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        # 把 headers 信息保存指定文件</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-I/--head</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">                       # 只显示文档信息（只显示响应头）</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Request Content</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 执行命令, 如果是 HTTP 则是请求方法, 如: GET, POST, PUT, DELETE 等</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#          如果是 FTP 则是执行 FTP协议命令</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-X/--request</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    COMMAND</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># HTTP POST 请求内容（并自动发出 POST 请求）, 例如: aa=bb&amp;cc=dd</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-d/--data</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">       DATA</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    (H)</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># HTTP multipart POST 表单数据,（并自动发出 POST 请求）</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 多个表单字段可添加多个 -H 参数, 如果是文件参数, 路径值前面需要加@</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 参考格式: -F &quot;name1=@/filepath&quot; -F &quot;name2=stringvalue&quot;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-F/--form</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">       CONTENT</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (H)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Response Content</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-o/--output</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> FILE</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    FILE</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        # 把响应内容输出到指定文件</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-O/--remote-name</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">                # 以 URL 的文件名作为文件名称保存响应内容到当前目录</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-C/--continue-at</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    OFFSET</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">      # 断点续传, 从 offset 位置继续传输</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Other</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-y/--speed-time</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">     SECONDS</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">     # 连接 超时时间, 单位: 秒,  默认为 30</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-m/--max-time</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">       SECONDS</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">     # 读取 超时时间, 必须在该时间内传输完数据, 单位: 秒</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">--limit-rate</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        RATE</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        # 限速传输, 单位: Byte/s</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-x/--proxy</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          [PROTOCOL://]HOST</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">:PORT</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    # 设置代理</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-U/--proxy-user</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">     USER[:PASSWORD]</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">             # 代理的用户名和密码</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-u/--user</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">           USER[:PASSWORD][</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">OPTIONS]</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">   # 设置服务器的用户密码和登录选项</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">--cacert</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">            FILE</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                  (SSL) </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 使用指定的 CA 证书</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-P/--ftp-port</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">       ADR</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (F) </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 指定 FTP 传输的端口</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-T/--upload-file</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    FILE</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    # 上传文件到指定的 URL (http/ftp) 位置, </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">                            # 参考格式: -T &quot;file1&quot; 或 -T &quot;{file1,file2}&quot;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-Q/--quote</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    CMD</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  (F/SFTP) </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 执行命令, -X 只执行一条命令, -Q 可执行多条,</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">                            # 多条命令将按顺序执行,</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">                            # 参考格式: -Q &quot;cmd1&quot; -Q &quot;cmd2&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量"><span>环境变量</span></a></h2><h3 id="查看环境变量" tabindex="-1"><a class="header-anchor" href="#查看环境变量"><span>查看环境变量</span></a></h3><p>1、在Linux系统中执行：env命令即可查看当前系统 中记录的环境变量</p><p>环境变量是一种KeyValue型结构，使用：分隔</p><p>2、在Linux系统 中，$符号被用于取“变量”的值</p><ul><li>语法：$环境变量</li><li>当和其它内容混合在一起的时候，可以通过{}来标注取的变量是谁</li></ul><h3 id="配置环境变量" tabindex="-1"><a class="header-anchor" href="#配置环境变量"><span>配置环境变量</span></a></h3><p>1、Linux环境变量可以用户自行设置，分为：</p><ul><li>临时设置 <ul><li>语法：export 变量名=变量值</li></ul></li><li>永久生效 <ul><li>针对当前 用户生效，配置在当前 用户的：~/bashrc文件中</li><li>针对 所有用户生效，配置在系统 的：/etc/profile文件中</li><li>并通过语法：source 配置文件，进行立刻生效</li></ul></li></ul><p>2、环境变量PATH这个 项目里面记录了系统 执行命令的搜索路径</p><ul><li>如export PATH=$PATH:自定义路径 <ul><li>export可新增，修改或删除环境变量，供后续执行的程序使用，export的效力仅及于该次登陆操作，重启后无用</li></ul></li></ul><h2 id="日志文件" tabindex="-1"><a class="header-anchor" href="#日志文件"><span>日志文件</span></a></h2><ul><li><p><em>日志文件是用于记录系统操作事件的记录文件或文件集合</em></p></li><li><p>系统日志文件是包含关于系统消息的文件，包括内核、服务、在系统上运行的应用程序等</p></li><li><p>**日志文件所处的位置都在/var/log目录下</p></li></ul><h3 id="last命令" tabindex="-1"><a class="header-anchor" href="#last命令"><span>last命令</span></a></h3><p><strong>列出目前与过去登入系统的用户相关信息</strong></p><ul><li><p>单独执行last指令，它会读取位于/var/log目录下，名称为wtmp的文件，并把该文件的内容，即登入系统的用户名单全部显示出来</p></li><li><p>last</p><ul><li>-a:把从何处登入系统的主机名称或Ip地址，显示在最后一列</li><li>-d，将Ip地址转换成主机名称</li><li>-f：指定记录文件</li><li>-n：设置列出名单的显示列数</li><li>-x：显示系统关机，重新开机，以及执行等级的改变等信息</li></ul></li></ul><h3 id="lastlog命令" tabindex="-1"><a class="header-anchor" href="#lastlog命令"><span>lastlog命令</span></a></h3><p>语法格式：lastlog [参数]</p><p>常用参数：-b 显示指定天数前的登录信息</p><ul><li><p>-t 显示指定天数以来的登录信息</p></li><li><p>-u 显示指定用户的最近登录信息</p></li></ul><p>-h显示召集令的帮助信息</p><h2 id="进程的调度" tabindex="-1"><a class="header-anchor" href="#进程的调度"><span>进程的调度</span></a></h2><h3 id="nice命令" tabindex="-1"><a class="header-anchor" href="#nice命令"><span>nice命令</span></a></h3><ul><li>改变进程优先级的命令，在启动进程时指定请求进程执行优先级</li><li>语法<code>nice [选项] 命令</code><ul><li>-n 范围【-20，19】 <ul><li>n值越小优先级越高，默认n值为10</li></ul></li></ul></li></ul><h3 id="renice命令" tabindex="-1"><a class="header-anchor" href="#renice命令"><span>renice命令</span></a></h3><ul><li>在进程执行时改变n的值</li><li>语法\`renoce [+/-n] [-g命令名] [-p 进程标识码] [-u 进程所有者]</li></ul><h3 id="挂起和激活进程" tabindex="-1"><a class="header-anchor" href="#挂起和激活进程"><span>挂起和激活进程</span></a></h3><ul><li>某正在执行态的进程被挂起时，会被系统自动投入后台，处于暂停状态，在合适的时候再被恢复激活，使之处于执行状态</li><li>通过<code>crtl +Z</code>可实现切换</li></ul><h4 id="fg命令" tabindex="-1"><a class="header-anchor" href="#fg命令"><span>fg命令</span></a></h4><p>使被挂起的进程返回至前台运行</p><ul><li>fg [参数] <ul><li>数字n，代表进程序号</li></ul></li></ul><h4 id="bg命令" tabindex="-1"><a class="header-anchor" href="#bg命令"><span>bg命令</span></a></h4><p>激活被挂起的进程，使之在后台运行</p><ul><li>bg [参数] <ul><li>数字n，代表进程序号</li></ul></li></ul><h2 id="系统安全" tabindex="-1"><a class="header-anchor" href="#系统安全"><span>系统安全</span></a></h2><h3 id="finger命令" tabindex="-1"><a class="header-anchor" href="#finger命令"><span>finger命令</span></a></h3><ul><li>查询一台主机上的登录账号的信息，使用权限为所有用户</li><li>语法：<code>finger [选项] 【使用者】 【用户名@主机名】</code></li></ul>`,218)]))}const f=s(v,[["render",m]]),y=JSON.parse('{"path":"/os/ii7zpr4n/","title":"系统操作","lang":"zh-CN","frontmatter":{"title":"系统操作","createTime":"2025/03/23 18:24:23","permalink":"/os/ii7zpr4n/"},"headers":[],"readingTime":{"minutes":18.9,"words":5671},"git":{"updatedTime":1743091220000,"contributors":[{"name":"舒永好","username":"舒永好","email":"shuyonghao@guoshenghuaxing.com","commits":1,"avatar":"https://gravatar.com/avatar/4b1c3f37ea707968be73c631a79de33afd360724ce87bf8f9dcacd67d14df92c?d=retro"}]},"filePathRelative":"notes/os/linux/sys_op.md"}');export{f as comp,y as data};
