import{_ as i,c as a,a as e,o as n}from"./app-C7T5jqfQ.js";const l={};function h(t,s){return n(),a("div",null,s[0]||(s[0]=[e(`<p>Erlang 不仅是一种语言，也是一个为应用程序设计的操作系统。Erlang 开发者很少编写独立的模块，而是编写库或应用程序，然后将这些内容打包成所谓的发布。一个发布包含 Erlang 虚拟机以及运行节点所需的所有应用程序，因此可以直接推送到生产环境。</p><p>本章将引导您完成设置 Cowboy、编写第一个应用程序并生成第一个发布的所有步骤。完成本章后，您应该知道如何将第一个 Cowboy 应用程序推送到生产环境</p><h2 id="创建项目" tabindex="-1"><a class="header-anchor" href="#创建项目"><span>创建项目</span></a></h2><h3 id="方式一-使用erlang-mk" tabindex="-1"><a class="header-anchor" href="#方式一-使用erlang-mk"><span>方式一：使用Erlang.mk</span></a></h3><p>首先，让我们创建我们的应用程序目录。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> mkdir</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> hello_erlang</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> hello_erlang</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后我们需要下载 Erlang.mk。可以使用以下命令或者手动下载。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> wget</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://erlang.mk/erlang.mk</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>我们现在可以启动我们的应用程序。由于我们要生成一个发布版本，我们也将同时启动它。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> make</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -f</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> erlang.mk</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> bootstrap</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> bootstrap-rel</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这将创建一个 Makefile、一个基础应用程序以及创建发布版本所需的发布文件。我们已经可以构建并启动这个发布版本。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> make</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">...</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">hello_erlang@127.0.0.1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输入命令 <code>i().</code> 将显示正在运行的进程，包括一个名为 <code>hello_erlang_sup</code> 的进程。这是我们应用程序的监督进程。</p><h4 id="牛仔设置" tabindex="-1"><a class="header-anchor" href="#牛仔设置"><span>牛仔设置</span></a></h4><p>我们将修改 <em>Makefile</em>，告诉构建系统需要获取并编译 Cowboy，并且我们将使用发布：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>PROJECT = hello_erlang</span></span>
<span class="line"><span></span></span>
<span class="line"><span>DEPS = cowboy</span></span>
<span class="line"><span>dep_cowboy_commit = 2.13.0</span></span>
<span class="line"><span></span></span>
<span class="line"><span>REL_DEPS = relx</span></span>
<span class="line"><span></span></span>
<span class="line"><span>DEP_PLUGINS = cowboy</span></span>
<span class="line"><span></span></span>
<span class="line"><span>include erlang.mk</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>DEP_PLUGINS</code> 行告诉构建系统加载 Cowboy 提供的插件。这些插件包括我们很快将要使用的预定义模板。</p><p>The <code>REL_DEPS</code> 行告诉构建系统获取并构建 <code>relx</code>，这是将创建发行版的库。</p><p>如果你现在运行 <code>make run</code>，Cowboy 将会被包含在发布中并自动启动。然而这还不够，因为 Cowboy 默认不会做任何事情。我们仍然需要告诉 Cowboy 去监听连接。</p><h3 id="方式二-使用rebar3" tabindex="-1"><a class="header-anchor" href="#方式二-使用rebar3"><span>方式二: 使用rebar3</span></a></h3><ul><li>创建</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>rebar3 new app demo</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>添加工程依赖<code>rebar.config</code></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>{deps, [</span></span>
<span class="line"><span>    {cowboy,&quot;2.12.0&quot;}</span></span>
<span class="line"><span>]}.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>添加项目依赖<code>&lt;appname&gt;.app.src</code></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>  {applications, [</span></span>
<span class="line"><span>        kernel,</span></span>
<span class="line"><span>        stdlib,</span></span>
<span class="line"><span>        cowboy</span></span>
<span class="line"><span>    ]}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="监听连接" tabindex="-1"><a class="header-anchor" href="#监听连接"><span>监听连接</span></a></h2><p>打开 <em>src/hello_erlang_app.erl</em> 文件，并在 <code>start/2</code> 函数中添加必要的代码</p><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">start</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">_Type</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">_Args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    Dispatch</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> cowboy_router</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">compile</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">([</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">       %% 定义 Cowboy 将会使用的路由，将请求映射到处理模块</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">       %% 将路径 / 映射到处理器模块 hello_handler。这个模块目前还不存在。</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        {&#39;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">_</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&#39;,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [{</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> hello_handler</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> []}]}</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    ]),</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    %% 启动监听器</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> _</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> cowboy</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">start_clear</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">my_http_listener</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        [{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 8080</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}],</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        #</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">env</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> #</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">dispatch</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Dispatch</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}}</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    ),</span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">    hello_erlang_sup</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">start_link</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">().</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>构建并启动发布，然后在浏览器中打开 <a href="http://localhost:8080/" target="_blank" rel="noopener noreferrer">http://localhost:8080</a>。由于模块不存在，你将收到一个 500 错误。其他任何 URL，例如 http://localhost:8080/test，将导致 404 错误。</p><h2 id="处理请求" tabindex="-1"><a class="header-anchor" href="#处理请求"><span>处理请求</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>Cowboy 提供不同类型的处理器，包括 REST 和 Websocket 处理器。</p></div><p>创建 <em>src/hello_handler.erl</em> 文件，添加 <code>init/2</code> 函数进行发送回复。</p><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">init</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Req0</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">State</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    Req</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> cowboy_req</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">reply</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">200</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        #</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{&lt;&lt;</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">content-type</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;&gt;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> &lt;&lt;</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">text/plain</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;&gt;},</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        &lt;&lt;</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Hello Erlang!</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;&gt;,</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">        Req0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">),</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Req</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> State</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的代码发送了一个 200 OK 响应，Content-type 头设置为 <code>text/plain</code>，响应体设置为 <code>Hello Erlang!</code>。</p><p>如果运行此发布并在浏览器中打开 <a href="http://localhost:8080/" target="_blank" rel="noopener noreferrer">http://localhost:8080</a>，你应该会看到一个漂亮的 <code>Hello Erlang!</code>。</p>`,36)]))}const p=i(l,[["render",h]]),d=JSON.parse('{"path":"/backend/erlang/g399dyea/","title":"引言","lang":"zh-CN","frontmatter":{"title":"引言","createTime":"2025/03/28 10:40:47","permalink":"/backend/erlang/g399dyea/"},"headers":[],"readingTime":{"minutes":2.77,"words":831},"git":{"updatedTime":1743158971000,"contributors":[{"name":"syh","username":"syh","email":"syh@qq.com","commits":1,"avatar":"https://gravatar.com/avatar/060d67e779a1b0aeace68a2a010b367f852e56888393383ea27302df983f6814?d=retro"}]},"filePathRelative":"notes/backend/erlang/rebar3/cowboy/introduction/readme.md"}');export{p as comp,d as data};
