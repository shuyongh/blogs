import{_ as a,c as r,a as n,o as t}from"./app-C7T5jqfQ.js";const c={};function o(d,e){return t(),r("div",null,e[0]||(e[0]=[n('<p>Erlang 的并发性是基于消息传递和 Actor 模型，以人们仅通过信件进行通信为例。</p><p>Erlang 的并发是基于进程（<code>process</code>）的。进程是一些独立的小型虚拟机，可以执行 <code>Erlang</code> 函数。</p><p>需要三个新的基本函数：<code>spawn</code>、<code>send</code> 和 <code>receive</code>。<code>spawn</code> 创建一个<span style="background:#00FF00;">并行进程</span>，<code>send</code> 向某个进程发送消息，<code>receive</code> 则是接收消息。</p><h2 id="并发性和并行性之间的差异" tabindex="-1"><a class="header-anchor" href="#并发性和并行性之间的差异"><span>并发性和并行性之间的差异?</span></a></h2><blockquote><p>对于许多 Erlang 用户来说，</p><ul><li>并发性指的是同时运行多个 Actor 的概念，但并非一定同时运行。</li><li>并行性指的是 Actor 同时运行。</li></ul></blockquote><div class="hint-container tip"><p class="hint-container-title">提示</p><p>区分并发和并行非常重要，因为许多程序员认为 Erlang 比实际早几年就做好了多核计算机的准备。Erlang 直到 2000 年代中期才真正适应<a href="http://en.wikipedia.org/wiki/Symmetric_multiprocessing" target="_blank" rel="noopener noreferrer">对称多处理</a>，并且直到 2009 年该语言的 R13B 版本发布才在很大程度上完善了实现。在此之前，SMP通常必须禁用以避免性能损失。为了在没有 SMP 的多核计算机上实现并行性，您将启动 VM 的多个实例。</p><p>有趣的是，由于 Erlang 并发性完全是关于隔离进程的，因此在语言级别上没有进行任何概念性更改来将真正的并行性引入该语言。所有更改都在 VM 中透明地完成，远离程序员的视线</p></div><h2 id="erlang实现" tabindex="-1"><a class="header-anchor" href="#erlang实现"><span>erlang实现</span></a></h2><p>采用轻量级进程和异步消息传递的方法来实现 Erlang</p><p>为了处理程序可能创建的所有这些潜在进程，虚拟机为每个核心启动一个充当<em>调度器</em>的线程。每个调度器都拥有一个<em>运行队列</em>，也就是一个包含 Erlang 进程的列表，调度器将在这些进程上分配一小段时间。当某个调度器的运行队列中有太多任务时，一些任务会被迁移到其他调度器。这意味着每个 Erlang 虚拟机负责进行所有负载均衡，程序员无需为此操心。还有一些其他优化措施，比如限制在超载进程上发送消息的速率，以便调节和分配负载。</p>',9)]))}const i=a(c,[["render",o]]),l=JSON.parse('{"path":"/backend/erlang/4rwctddm/","title":"引言","lang":"zh-CN","frontmatter":{"title":"引言","createTime":"2025/03/22 14:40:25","permalink":"/backend/erlang/4rwctddm/"},"headers":[],"readingTime":{"minutes":1.94,"words":583},"git":{"updatedTime":1743676776000,"contributors":[{"name":"舒永好","username":"舒永好","email":"shuyonghao@guoshenghuaxing.com","commits":1,"avatar":"https://gravatar.com/avatar/4b1c3f37ea707968be73c631a79de33afd360724ce87bf8f9dcacd67d14df92c?d=retro"},{"name":"syh","username":"syh","email":"syh@qq.com","commits":1,"avatar":"https://gravatar.com/avatar/060d67e779a1b0aeace68a2a010b367f852e56888393383ea27302df983f6814?d=retro"}]},"filePathRelative":"notes/backend/erlang/erlang_otp/concurrent_programming/readme.md"}');export{i as comp,l as data};
