import{_ as s,c as i,a as e,o as a}from"./app-C7T5jqfQ.js";const l={};function n(d,t){return a(),i("div",null,t[0]||(t[0]=[e(`<h2 id="算术运算符" tabindex="-1"><a class="header-anchor" href="#算术运算符"><span>算术运算符</span></a></h2><table><thead><tr><th style="text-align:left;">操作符</th><th style="text-align:left;">描述</th><th style="text-align:left;">示例</th></tr></thead><tbody><tr><td style="text-align:left;">+</td><td style="text-align:left;">两个操作数相加</td><td style="text-align:left;">1 + 2 = 3</td></tr><tr><td style="text-align:left;">−</td><td style="text-align:left;">从第一个操作数减去第二个操作数</td><td style="text-align:left;">1 - 2 = -1</td></tr><tr><td style="text-align:left;">*</td><td style="text-align:left;">两个操作数相乘</td><td style="text-align:left;">2 * 2 = 4</td></tr><tr><td style="text-align:left;">/</td><td style="text-align:left;">通过分子除以分母</td><td style="text-align:left;">3 / 2 = 1.5</td></tr><tr><td style="text-align:left;">rem</td><td style="text-align:left;">第二数除以第一数的余数, <strong>要求两边必须为整数</strong>（取余）</td><td style="text-align:left;">3 rem 2 = 1</td></tr><tr><td style="text-align:left;">div</td><td style="text-align:left;">div 组件将执行除法并返回整数部分(取整 )</td><td style="text-align:left;">3 div 2 = 1</td></tr></tbody></table><h2 id="比较运算符" tabindex="-1"><a class="header-anchor" href="#比较运算符"><span>比较运算符</span></a></h2><table><thead><tr><th style="text-align:left;">操作符</th><th style="text-align:left;">描述</th><th style="text-align:left;">示例</th></tr></thead><tbody><tr><td style="text-align:left;">==</td><td style="text-align:left;">测试两个对象是否相等</td><td style="text-align:left;">2 = 2 结果为 true</td></tr><tr><td style="text-align:left;">/=</td><td style="text-align:left;">测试两个对象是否为不相等</td><td style="text-align:left;">3 /= 2 结果为 true</td></tr><tr><td style="text-align:left;">&lt;</td><td style="text-align:left;">测试左边对象是否小于右边操作对象</td><td style="text-align:left;">2 &lt; 3 结果为 true</td></tr><tr><td style="text-align:left;">=&lt;</td><td style="text-align:left;">测试左边对象是否小于或等于右边操作对象</td><td style="text-align:left;">2 =&lt; 3 结果为 true</td></tr><tr><td style="text-align:left;">&gt;</td><td style="text-align:left;">测试左边对象是否大于右边操作对象</td><td style="text-align:left;">3 &gt; 2 结果为 true</td></tr><tr><td style="text-align:left;">&gt;=</td><td style="text-align:left;">测试左边对象是否大于或等于右边操作对象</td><td style="text-align:left;">3 &gt;= 2 结果为 true</td></tr><tr><td style="text-align:left;"><code>=:=</code></td><td style="text-align:left;">术语等价性</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>=/=</code></td><td style="text-align:left;">术语非等价性</td><td style="text-align:left;"></td></tr></tbody></table><p>在进行布尔代数和比较时，还有一点需要注意。</p><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">14</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ==</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> false</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">false</span></span>
<span class="line"><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">15</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> false</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果您来自过程式语言或大多数面向对象的语言，您可能会扯头发。第 14 行应该评估为 true，第 15 行应该评估为 false！毕竟，false 表示 0，true 表示任何其他值！除了在 Erlang 中。因为我骗了你。是的，我做了。真不应该。</p><p>Erlang 没有像布尔值 true 和 false 这样的东西。true 和 false 是原子，但它们与语言很好地集成，只要你不期望 false 和 true 意味着除了 false 和 true 之外的任何东西，你就不应该遇到任何问题。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p><strong>注意：</strong> 比较中每个元素的正确排序如下 <code>数字 &lt; 原子 &lt; 引用 &lt; 函数 &lt; 端口 &lt; 进程 &lt; 元组 &lt; 列表 &lt; 位字符串</code></p><p>你可能还不知道所有这些类型，但你将通过本书了解它们。请记住，这就是为什么你可以用任何东西比较任何东西！引用 Erlang 的创始人之一 Joe Armstrong 的话说：“实际顺序并不重要，重要的是总排序是明确定义的。”</p></div><h2 id="逻辑运算符" tabindex="-1"><a class="header-anchor" href="#逻辑运算符"><span>逻辑运算符</span></a></h2><table><thead><tr><th style="text-align:left;">操作符</th><th style="text-align:left;">描述</th><th style="text-align:left;">示例</th></tr></thead><tbody><tr><td style="text-align:left;">or</td><td style="text-align:left;">逻辑 “或”操作符</td><td style="text-align:left;">true 或 false 结果为 true</td></tr><tr><td style="text-align:left;">and</td><td style="text-align:left;">逻辑 “与”操作符</td><td style="text-align:left;">true 与 false 结果为 false</td></tr><tr><td style="text-align:left;">not</td><td style="text-align:left;">逻辑 “非”操作符</td><td style="text-align:left;">非 false 结果为 true</td></tr><tr><td style="text-align:left;">xor</td><td style="text-align:left;">逻辑 “异或”操作符</td><td style="text-align:left;">true 异或 false 结果为 true</td></tr></tbody></table><p><em>示例：</em></p><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> not</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">false</span></span>
<span class="line"><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> and</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> false</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">false</span></span>
<span class="line"><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> xor</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> false</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">true</span></span>
<span class="line"><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">4</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> or</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> garbage</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">**</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> exception</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> error</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">: </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">bad</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> argument</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">     in</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> operator</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  or/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">        called</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> as</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> or</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> garbage</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="短路表达式" tabindex="-1"><a class="header-anchor" href="#短路表达式"><span>短路表达式</span></a></h3><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Expr1</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> orelse</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Expr2</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Expr1</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> andalso</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Expr2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Expr2</code> 只在必要时进行评估。也就是说， <code>Expr2</code> 只在以下情况下进行评估：</p><ul><li><code>Expr1</code> 在一个 <code>orelse</code> 表达式中等于 <code>false</code> 。</li></ul><p>或</p><ul><li><code>Expr1</code> 在一个 <code>andalso</code> 表达式中等于 <code>true</code> 。</li></ul><p>返回 <code>Expr1</code> 的值（即 <code>true</code> 或 <code>false</code> 的值）或 <code>Expr2</code> 的值（如果 <code>Expr2</code> 被评估）。</p><h2 id="位运算符" tabindex="-1"><a class="header-anchor" href="#位运算符"><span>位运算符</span></a></h2><table><thead><tr><th style="text-align:left;">操作符</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">band</td><td style="text-align:left;">位 “and”运算符</td></tr><tr><td style="text-align:left;">bor</td><td style="text-align:left;">位 “or” 运算符</td></tr><tr><td style="text-align:left;">bxor</td><td style="text-align:left;">位 “xor”或异运算符</td></tr><tr><td style="text-align:left;">bnot</td><td style="text-align:left;">按位反运算符</td></tr><tr><td style="text-align:left;"><code>bsl</code></td><td style="text-align:left;">左位移</td></tr><tr><td style="text-align:left;"><code>bsr</code></td><td style="text-align:left;">右位移</td></tr></tbody></table><p>以下是这些运算符真值表显示 -</p><table><thead><tr><th style="text-align:left;">p</th><th style="text-align:left;">q</th><th style="text-align:left;">p &amp; q</th><th style="text-align:left;">p | q</th><th style="text-align:left;">p ^ q</th></tr></thead><tbody><tr><td style="text-align:left;">0</td><td style="text-align:left;">0</td><td style="text-align:left;">0</td><td style="text-align:left;">0</td><td style="text-align:left;">0</td></tr><tr><td style="text-align:left;">0</td><td style="text-align:left;">1</td><td style="text-align:left;">0</td><td style="text-align:left;">1</td><td style="text-align:left;">1</td></tr><tr><td style="text-align:left;">1</td><td style="text-align:left;">1</td><td style="text-align:left;">1</td><td style="text-align:left;">1</td><td style="text-align:left;">0</td></tr><tr><td style="text-align:left;">1</td><td style="text-align:left;">0</td><td style="text-align:left;">0</td><td style="text-align:left;">1</td><td style="text-align:left;">1</td></tr></tbody></table><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">module</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">helloworld</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">export</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">([</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">start</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]).</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">start</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">   io</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">fwrite</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">~</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">w</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">~</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">n</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,[</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">00111100</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> band</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 00001101</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]),</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">   io</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">fwrite</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">~</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">w</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">~</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">n</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,[</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">00111100</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> bxor</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 00111100</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]),</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">   io</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">fwrite</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">~</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">w</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">~</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">n</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,[</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">bnot</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 00111100</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]),</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">   io</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">fwrite</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">~</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">w</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">~</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">n</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,[</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">00111100</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> bor</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 00111100</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]).</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>76</span></span>
<span class="line"><span>0</span></span>
<span class="line"><span>-111101</span></span>
<span class="line"><span>111100</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="运算符优先级" tabindex="-1"><a class="header-anchor" href="#运算符优先级"><span>运算符优先级</span></a></h2><blockquote><p>运算符优先级用来确定在不带括号表达式的计算顺序。</p></blockquote><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">关联</th></tr></thead><tbody><tr><td style="text-align:left;">:</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">#</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">bnot, not</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">/,*, div, rem, band, and</td><td style="text-align:left;">左关联</td></tr><tr><td style="text-align:left;">+,-, bor, bxor, or, xor</td><td style="text-align:left;">左关联</td></tr><tr><td style="text-align:left;">==,/=,= &lt;,&lt;,&gt; =,&gt;</td><td style="text-align:left;"></td></tr></tbody></table>`,30)]))}const k=s(l,[["render",n]]),r=JSON.parse('{"path":"/backend/erlang/kkzph6oj/","title":"运算符","lang":"zh-CN","frontmatter":{"title":"运算符","createTime":"2025/03/28 10:12:32","permalink":"/backend/erlang/kkzph6oj/"},"headers":[],"readingTime":{"minutes":3.12,"words":936},"git":{"updatedTime":1753952414000,"contributors":[{"name":"syh","username":"syh","email":"syh@qq.com","commits":4,"avatar":"https://gravatar.com/avatar/060d67e779a1b0aeace68a2a010b367f852e56888393383ea27302df983f6814?d=retro"}]},"filePathRelative":"notes/backend/erlang/erlang_foundation/operator.md"}');export{k as comp,r as data};
