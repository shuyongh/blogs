import{_ as i,c as a,a as n,o as e}from"./app-C7T5jqfQ.js";const p={};function t(l,s){return e(),a("div",null,s[0]||(s[0]=[n(`<p>释放资源文件指定了哪些应用程序包含在基于 Erlang/OTP 的发行版（系统）中。</p><p>该文件由模块中的函数在生成启动脚本（.script，.boot）和发行版升级文件（relup）时使用。</p><h2 id="文件语法" tabindex="-1"><a class="header-anchor" href="#文件语法"><span>文件语法</span></a></h2><blockquote><p>释放资源文件应命名为{Name.rel}。</p><p><code>.rel</code> 文件包含一个单独的 Erlang 术语，称为<em>发行规范</em> 。</p></blockquote><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">release</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">RelName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Vsn</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">},</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">erts</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> EVsn</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">},</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  [{</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Application</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> AppVsn</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">   {</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Application</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> AppVsn</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Type</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">   {</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Application</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> AppVsn</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> IncApps</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> |</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">   {</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Application</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> AppVsn</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Type</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> IncApps</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}]}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><strong><code>RelName = 字符串()</code></strong> - 发行名称。</p></li><li><p><strong><code>Vsn = 字符串()</code></strong> - 发行版本。</p></li><li><p><strong><code>EVsn = 字符串()</code></strong> - 发行目标的 ERTS 版本。</p></li><li><p><strong><code>Application = atom()</code></strong> - 包含在发行版中的应用程序的名称。</p></li><li><p><strong><code>AppVsn = string()</code></strong> - 包含在发行版中的应用程序的版本。</p></li><li><p><strong><code>Type = permanent | transient | temporary | load | none</code></strong> - 包含在发行版中的应用程序的启动类型。</p><p>如果 <code>Type = permanent | transient | temporary</code> ，应用程序将以相应的方式加载和启动，参见 <a href="https://www.erlang.org/doc/apps/kernel/application" target="_blank" rel="noopener noreferrer"><code>application</code></a>。</p><p>如果 <code>Type = load</code>，应用程序仅被加载。</p><p>如果 <code>Type = none</code>，应用程序既不被加载也不启动，尽管其模块的代码被加载。</p><p>默认为 <code>permanent</code></p></li><li><p><strong><code>IncApps = [atom()]</code></strong> - 一个列表，包含由发布中包含的应用程序所包括的应用程序。该列表必须是 <code>Application.app</code> 应用程序资源文件中指定的包含应用程序的子集，并且会覆盖此值。默认值与应用程序资源文件中的值相同。</p></li></ul><div class="hint-container warning"><p class="hint-container-title">注意</p><p>应用程序列表必须包含 Kernel 和 STDLIB 应用。</p></div>`,7)]))}const k=i(p,[["render",t]]),r=JSON.parse('{"path":"/backend/erlang/r20il9ui/","title":"发布资源文件","lang":"zh-CN","frontmatter":{"title":"发布资源文件","createTime":"2025/04/08 18:12:31","permalink":"/backend/erlang/r20il9ui/"},"headers":[],"readingTime":{"minutes":1.26,"words":377},"git":{"updatedTime":1744112181000,"contributors":[{"name":"syh","username":"syh","email":"syh@qq.com","commits":1,"avatar":"https://gravatar.com/avatar/060d67e779a1b0aeace68a2a010b367f852e56888393383ea27302df983f6814?d=retro"}]},"filePathRelative":"notes/backend/erlang/erlang_core/sasl/rel.md"}');export{k as comp,r as data};
