import{_ as e,c as n,a,o as i}from"./app-C7T5jqfQ.js";const l={};function p(d,s){return i(),n("div",null,s[0]||(s[0]=[a(`<h2 id="发布概念" tabindex="-1"><a class="header-anchor" href="#发布概念"><span>发布概念</span></a></h2><p>当您编写了一个或多个应用程序后，可能希望创建一个包含这些应用程序和一部分 <code>Erlang/OTP</code> 应用程序的完整系统。这被称为一个<em>发布</em>。</p><p>要做到这一点，请创建一个<a href="https://www.erlang.org/doc/system/release_structure#res_file" target="_blank" rel="noopener noreferrer">发布资源文件</a>，定义哪些应用程序包含在该发布中。</p><p>发布资源文件用于生成 <a href="https://www.erlang.org/doc/system/release_structure#boot" target="_blank" rel="noopener noreferrer">启动脚本</a>和 <a href="https://www.erlang.org/doc/system/release_structure#pack" target="_blank" rel="noopener noreferrer">发布包</a>。迁移到另一个站点并安装的系统称为<em>目标系统</em>。如何使用发布包创建目标系统 描述在<a href="https://www.erlang.org/doc/system/create_target" target="_blank" rel="noopener noreferrer">此处</a>。 创建和升级目标系统 在系统原理中。</p><h2 id="发布资源文件" tabindex="-1"><a class="header-anchor" href="#发布资源文件"><span>发布资源文件</span></a></h2><blockquote><p>要定义一个发布版本，创建一个<em>发布资源文件</em>，一个<code>.rel</code>文件。</p><p>文件必须命名为<code>Rel.rel</code>，其中<code>Rel</code>是一个唯一的名称。</p></blockquote><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">release</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Vsn</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">},</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">erts</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> EVsn</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">},</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [{</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Application1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> AppVsn1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">},</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">   ...</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  {</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">ApplicationN</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> AppVsnN</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}]}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>每个<code>Application</code>（原子）和<code>AppVsn</code>是包含在发布中的应用程序的名称和版本。基于 Erlang/OTP 的最小发布包括 <code>Kernel </code>和 <code>STDLIB </code>应用程序，因此这些应用程序必须包含在列表中。</p><p>如果要升级发布，还必须包含<code> SASL</code> 应用程序。</p><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h3><p>以下是一个示例，展示了来自“应用程序”部分的<code>.app</code>文件，用于<code>ch_app</code>的发布：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>{application, ch_app,</span></span>
<span class="line"><span> [{description, &quot;Channel allocator&quot;},</span></span>
<span class="line"><span>  {vsn, &quot;1&quot;},</span></span>
<span class="line"><span>  {modules, [ch_app, ch_sup, ch3]},</span></span>
<span class="line"><span>  {registered, [ch3]},</span></span>
<span class="line"><span>  {applications, [kernel, stdlib, sasl]},</span></span>
<span class="line"><span>  {mod, {ch_app,[]}}</span></span>
<span class="line"><span> ]}.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>.rel</code>文件还必须包含<code>kernel</code>、<code>stdlib</code>和<code>sasl</code>，因为这些应用程序是<code>ch_app</code>所需要的。该文件名为<code>ch_rel-1.rel</code>：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>{release,</span></span>
<span class="line"><span> {&quot;ch_rel&quot;, &quot;A&quot;},</span></span>
<span class="line"><span> {erts, &quot;14.2.5&quot;},</span></span>
<span class="line"><span> [{kernel, &quot;9.2.4&quot;},</span></span>
<span class="line"><span>  {stdlib, &quot;5.2.3&quot;},</span></span>
<span class="line"><span>  {sasl, &quot;4.2.1&quot;},</span></span>
<span class="line"><span>  {ch_app, &quot;1&quot;}]</span></span>
<span class="line"><span>}.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="启动脚本" tabindex="-1"><a class="header-anchor" href="#启动脚本"><span>启动脚本</span></a></h2><blockquote><p><a href="https://www.erlang.org/doc/apps/sasl/systools" target="_blank" rel="noopener noreferrer"><code>systools</code></a>在 SASL 应用程序中包含构建和检查发布所需的工具。这些函数读取<code>.rel</code>和<code>.app</code>文件并执行 语法和依赖检查。The <a href="https://www.erlang.org/doc/apps/sasl/systools#make_script/2" target="_blank" rel="noopener noreferrer"><code>systools:make_script/1,2</code></a> 函数用于生成启动脚本：</p></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>1&gt; systools:make_script(&quot;ch_rel-1&quot;, [local]).</span></span>
<span class="line"><span>ok</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>这个调用会生成可读的启动脚本，以及 <code>ch_rel-1.script</code>，以及用于运行时系统的二进制启动脚本<code>ch_rel-1.boot</code>。</p><ul><li><code>&quot;ch_rel-1&quot;</code> 是<code>.rel</code>文件的名字，去掉扩展名。</li><li><code>local</code> 意味着我们希望版本能够从任何地方运行，而不仅仅是从当前安装位置<code>$ROOT/lib</code>(<code>$ROOT</code>是安装的发布根目录)运行。</li></ul><p>使用启动脚本启动 Erlang/OTP 时，来自<code>.rel</code>文件的所有应用程序将自动加载并启动： 无标签内容需要翻译。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>% erl -boot ch_rel-1</span></span>
<span class="line"><span>Erlang/OTP 26 [erts-14.2.5] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [jit]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Eshell V14.2.5 (press Ctrl+G to abort, type help(). for help)</span></span>
<span class="line"><span>1&gt; application:which_applications().</span></span>
<span class="line"><span>[{ch_app,&quot;Channel allocator&quot;,&quot;1&quot;},</span></span>
<span class="line"><span> {sasl,&quot;SASL  CXC 138 11&quot;,&quot;4.2.1&quot;},</span></span>
<span class="line"><span> {stdlib,&quot;ERTS  CXC 138 10&quot;,&quot;5.2.3&quot;},</span></span>
<span class="line"><span> {kernel,&quot;ERTS  CXC 138 10&quot;,&quot;9.2.4&quot;}]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="发布包" tabindex="-1"><a class="header-anchor" href="#发布包"><span>发布包</span></a></h2><p><code>systools:make_tar/1,2</code> 函数接受一个 <code>.rel</code> 文件作为输入，并生成一个包含指定应用程序代码的压缩 <code>tar .gz</code><em>发布包</em>：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>1&gt; systools:make_script(&quot;ch_rel-1&quot;).</span></span>
<span class="line"><span>ok</span></span>
<span class="line"><span>2&gt; systools:make_tar(&quot;ch_rel-1&quot;,[{erts, &quot;C:/Program Files (x86)/erl5.8.4&quot;}]).</span></span>
<span class="line"><span>ok</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这里，<code>systools</code> 将查找您的版本文件和 Erlang 运行时系统（由于 <code>erts</code> 选项）。如果您省略 <code>erts</code> 选项，则版本将不可执行，并且将依赖于系统上已经安装了 Erlang。</p><ul><li><p>解压缩文件，您应该看到一个类似于这样的目录</p><ul><li><code>erts-5.8.4/</code> 目录将包含运行时系统。</li><li><code>lib/</code> 目录包含我们需要的全部应用程序</li><li><code>releases</code> 包含引导文件等等。</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>erts-5.8.4/</span></span>
<span class="line"><span>lib/</span></span>
<span class="line"><span>releases/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="目录结构" tabindex="-1"><a class="header-anchor" href="#目录结构"><span>目录结构</span></a></h2><p>发布处理程序从发布包安装的代码的目录结构如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>$ROOT/lib/App1-AVsn1/ebin</span></span>
<span class="line"><span>                    /priv</span></span>
<span class="line"><span>         /App2-AVsn2/ebin</span></span>
<span class="line"><span>                    /priv</span></span>
<span class="line"><span>         ...</span></span>
<span class="line"><span>         /AppN-AVsnN/ebin</span></span>
<span class="line"><span>                    /priv</span></span>
<span class="line"><span>     /erts-EVsn/bin</span></span>
<span class="line"><span>     /releases/Vsn</span></span>
<span class="line"><span>     /bin</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>lib</code> - 应用程序目录</li><li><code>erts-EVsn/bin</code> - Erlang 运行时系统可执行文件</li><li><code>releases/Vsn</code> - 包含<code>.rel</code>文件和启动脚本<code>start.boot</code>；如果在发布包中存在，还包含<code>relup</code>和/或<code>sys.config</code>或<code>sys.config.src</code></li><li><code>bin</code> - Erlang 运行时系统顶级可执行文件</li></ul><p>应用程序不需要位于目录<code>$ROOT/lib</code>下。因此可以存在包含系统不同部分的多个安装目录。例如，之前的示例可以扩展如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>$SECOND_ROOT/.../SApp1-SAVsn1/ebin</span></span>
<span class="line"><span>                             /priv</span></span>
<span class="line"><span>                /SApp2-SAVsn2/ebin</span></span>
<span class="line"><span>                             /priv</span></span>
<span class="line"><span>                ...</span></span>
<span class="line"><span>                /SAppN-SAVsnN/ebin</span></span>
<span class="line"><span>                             /priv</span></span>
<span class="line"><span></span></span>
<span class="line"><span>$THIRD_ROOT/TApp1-TAVsn1/ebin</span></span>
<span class="line"><span>                        /priv</span></span>
<span class="line"><span>           /TApp2-TAVsn2/ebin</span></span>
<span class="line"><span>                        /priv</span></span>
<span class="line"><span>           ...</span></span>
<span class="line"><span>           /TAppN-TAVsnN/ebin</span></span>
<span class="line"><span>                        /priv</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>$SECOND_ROOT 和 $THIRD_ROOT 作为 <code>变量</code> 在调用 <a href="https://www.erlang.org/doc/apps/sasl/systools#make_script/2" target="_blank" rel="noopener noreferrer"><code>systools:make_script/2</code></a> 函数时被引入。</p><h3 id="无磁盘和-或只读客户端" tabindex="-1"><a class="header-anchor" href="#无磁盘和-或只读客户端"><span>无磁盘和/或只读客户端</span></a></h3><p>如果一个完整的系统由无磁盘和/或只读客户端节点组成，则需要在<code>clients</code>目录中添加到<code>$ROOT</code>目录。只读节点是指具有只读文件系统的节点。 无磁盘和/或只读客户端节点组成的完整系统中，需要在<code>clients</code>目录中添加到<code>$ROOT</code>目录。只读节点是指具有只读文件系统的节点。</p><p><code>clients</code>目录应为每个受支持的客户端节点包含一个子目录。每个客户端目录的名称应与相应的客户端节点名称相同。每个客户端目录至少应包含<code>bin</code>和<code>releases</code>子目录。 这些目录用于存储已安装的 发行版信息，并指定客户端的当前发行版。因此，<code>$ROOT</code>目录包含以下内容：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>$ROOT/...</span></span>
<span class="line"><span>    /clients/ClientName1/bin</span></span>
<span class="line"><span>                        /releases/Vsn</span></span>
<span class="line"><span>            /ClientName2/bin</span></span>
<span class="line"><span>                        /releases/Vsn</span></span>
<span class="line"><span>            ...</span></span>
<span class="line"><span>            /ClientNameN/bin</span></span>
<span class="line"><span>                        /releases/Vsn</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果所有客户端都运行相同的 Erlang 机器类型，则应使用此结构。如果有客户端运行不同类型的 Erlang 机器或在不同的操作系统上运行，则可以将<code>clients</code>目录分为每个类型的 Erlang 机器一个子目录。或者，可以为每种机器设置一个<code>$ROOT</code>。对于每种类型，<code>$ROOT</code>目录中的一些目录需要包含： 对于每种类型，<code>$ROOT</code>目录中的一些目录需要包含： 对于每种类型，<code>$ROOT</code>目录中的一些目录需要包含：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>$ROOT/...</span></span>
<span class="line"><span>    /clients/Type1/lib</span></span>
<span class="line"><span>                  /erts-EVsn</span></span>
<span class="line"><span>                  /bin</span></span>
<span class="line"><span>                  /ClientName1/bin</span></span>
<span class="line"><span>                              /releases/Vsn</span></span>
<span class="line"><span>                  /ClientName2/bin</span></span>
<span class="line"><span>                              /releases/Vsn</span></span>
<span class="line"><span>                  ...</span></span>
<span class="line"><span>                  /ClientNameN/bin</span></span>
<span class="line"><span>                              /releases/Vsn</span></span>
<span class="line"><span>            ...</span></span>
<span class="line"><span>            /TypeN/lib</span></span>
<span class="line"><span>                  /erts-EVsn</span></span>
<span class="line"><span>                  /bin</span></span>
<span class="line"><span>                  ...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过这种方式，客户端的根目录为<code>Type1</code>。 <code>$ROOT/clients/Type1</code>。</p>`,40)]))}const r=e(l,[["render",p]]),t=JSON.parse('{"path":"/backend/erlang/assko39f/","title":"发行版","lang":"zh-CN","frontmatter":{"title":"发行版","createTime":"2025/03/22 15:25:36","permalink":"/backend/erlang/assko39f/"},"headers":[],"readingTime":{"minutes":4.88,"words":1465},"git":{"updatedTime":1744112181000,"contributors":[{"name":"舒永好","username":"舒永好","email":"shuyonghao@guoshenghuaxing.com","commits":1,"avatar":"https://gravatar.com/avatar/4b1c3f37ea707968be73c631a79de33afd360724ce87bf8f9dcacd67d14df92c?d=retro"},{"name":"syh","username":"syh","email":"syh@qq.com","commits":1,"avatar":"https://gravatar.com/avatar/060d67e779a1b0aeace68a2a010b367f852e56888393383ea27302df983f6814?d=retro"}]},"filePathRelative":"notes/backend/erlang/erlang_otp/design_rule/release.md"}');export{r as comp,t as data};
