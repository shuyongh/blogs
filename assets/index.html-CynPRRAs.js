import{_ as i,c as n,a,o as e}from"./app-C7T5jqfQ.js";const l="/blogs/assets/image-20230514102722834-B-KXLsIu.png",d="/blogs/assets/image-20230514102918740-BzX9wB-m.png",r="/blogs/assets/image-20230514103144845-HVJOJRN5.png",p="/blogs/assets/image-20230514104849575-ePu5mzeV.png",t="/blogs/assets/image-20230928105901056-sX_3PHSs.png",c="/blogs/assets/image-20230928141024096-BYgK2Eew.png",g="/blogs/assets/image-20230928141059114-Cel9a01a.png",h="/blogs/assets/image-20230928141341651-LsQXU-qI.png",v="/blogs/assets/image-20230928141409668-DACf9xoa.png",m={};function o(u,s){return e(),n("div",null,s[0]||(s[0]=[a(`<h2 id="启动" tabindex="-1"><a class="header-anchor" href="#启动"><span>启动</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>//启动</span></span>
<span class="line"><span>./nginx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+l+'" alt="image-20230514102722834"></p><h2 id="查看master进程id" tabindex="-1"><a class="header-anchor" href="#查看master进程id"><span>查看master进程ID</span></a></h2><ul><li><p>想要操作NGinx的master进程，就需要获取到master进程的进程号ID，可通过以下命令获取</p></li><li><p>方式一</p><ul><li>通过命令<code>ps ef | grep nginx</code>查看</li></ul></li><li><p>方式二</p><ul><li>在<code>/nginx/logs/nginx.pid</code>文件中查看</li></ul></li><li><p><img src="'+d+`" alt="image-20230514102918740"></p></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>docker run --name nginx \\</span></span>
<span class="line"><span>-v /root/nginx/conf/nginx.conf:/etc/nginx/nginx.conf \\</span></span>
<span class="line"><span>-v /root/nginx/conf/conf.d:/etc/nginx/conf.d \\</span></span>
<span class="line"><span>-v /root/nginx/log:/var/log/nginx \\</span></span>
<span class="line"><span>-v /root/nginx/html:/usr/share/nginx/html \\</span></span>
<span class="line"><span>-p 9090:80 \\</span></span>
<span class="line"><span>--restart=always \\</span></span>
<span class="line"><span>-d nginx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="nginx服务的信号控制" tabindex="-1"><a class="header-anchor" href="#nginx服务的信号控制"><span>Nginx服务的信号控制</span></a></h2><ul><li>调用命令为<code>kill -signal PID</code><ul><li>signal：即为信号</li><li>PID：即为获取到的master线程ID</li></ul></li></ul><p><img src="`+r+'" alt="image-20230514103144845"></p><h2 id="nginx的命令行控制" tabindex="-1"><a class="header-anchor" href="#nginx的命令行控制"><span>Nginx的命令行控制</span></a></h2><ul><li>此方式是通过Nginx安装目录下的sbin下的可执行文件nginx来进行 Nginx状态的控制，我们可以通过nginx -h来查看都有哪些参数可以 用：</li></ul><p><img src="'+p+`" alt="image-20230514104849575"></p><ul><li>-?和-h:显示帮助信息</li><li>-v:打印版本号信息并退出</li><li>-V:打印版本号信息和配置信息并退出</li><li>-t:测试nginx的配置文件语法是否正确并退出</li><li>-T:测试nginx的配置文件语法是否正确并列出用到的配置文件信息然后 退出</li><li>-q:在配置测试期间禁止显示非错误消息</li><li>-s:signal信号，后面可以跟 ： <ul><li>stop[快速关闭，类似于TERM/INT信号的作用]</li><li>quit[优雅的关闭，类似于QUIT信号的作用]</li><li>reopen[重新打开日志文件类似于USR1信号的作用]</li><li>reload[类似于HUP信号的作用]</li></ul></li><li>-p:prefix，指定Nginx的prefix路径，(默认为: /usr/local/nginx/)</li><li>-c:filename,指定Nginx的配置文件路径,(默认为: conf/nginx.conf)</li><li>-g:用来补充Nginx配置文件，向Nginx服务指定启动时应用全局的配置</li></ul><h2 id="nginx服务器版本升级和新增模块" tabindex="-1"><a class="header-anchor" href="#nginx服务器版本升级和新增模块"><span>Nginx服务器版本升级和新增模块</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>需求：Nginx的版本最开始使用的是Nginx-1.14.2,由于服务升级，需</span></span>
<span class="line"><span>要将Nginx的版本升级到Nginx-1.16.1,要求Nginx不能中断提供服</span></span>
<span class="line"><span>务。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备"><span>环境准备</span></a></h2><p>（1）先准备两个版本的Nginx分别是 1.14.2和1.16.1</p><p>（2）使用Nginx源码安装的方式将1.14.2版本安装成功并正确访问</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>进入安装目录</span></span>
<span class="line"><span>./configure</span></span>
<span class="line"><span>make &amp;&amp; make install</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（3）将Nginx1.16.1进行参数配置和编译，不需要进行安装。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>进入安装目录</span></span>
<span class="line"><span>./configure</span></span>
<span class="line"><span>make</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="方案一-使用nginx服务信号进行升级" tabindex="-1"><a class="header-anchor" href="#方案一-使用nginx服务信号进行升级"><span>方案一:使用Nginx服务信号进行升级</span></a></h2><ul><li>第一步:将1.14.2版本的sbin目录下的nginx进行备份</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>cd /usr/local/nginx/sbin</span></span>
<span class="line"><span>mv nginx nginxold</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>第二步:将Nginx1.16.1安装目录编译后的objs目录下的nginx文件，拷贝 到原来/usr/local/nginx/sbin目录下</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>cd ~/nginx/core/nginx-1.16.1/objs</span></span>
<span class="line"><span>cp nginx /usr/local/nginx/sbin</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>第三步:发送信号USR2给Nginx的1.14.2版本对应的master进程 第四步:发送信号QUIT给Nginx的1.14.2版本对应的master进程</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>kill -QUIT \`more /usr/local/logs/nginx.pid.oldbin\`</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="方案二-使用nginx安装目录的make命令完成升级" tabindex="-1"><a class="header-anchor" href="#方案二-使用nginx安装目录的make命令完成升级"><span>方案二:使用Nginx安装目录的make命令完成升级</span></a></h2><ul><li>第一步:将1.14.2版本的sbin目录下的nginx进行备份</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>cd /usr/local/nginx/sbin</span></span>
<span class="line"><span>mv nginx nginxold</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>第二步:将Nginx1.16.1安装目录编译后的objs目录下的nginx文件，拷贝 到原来/usr/local/nginx/sbin目录下</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>cd ~/nginx/core/nginx-1.16.1/objs</span></span>
<span class="line"><span>cp nginx /usr/local/nginx/sbin</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>第三步:进入到安装目录，执行make upgrade 第四步:查看是否更新成功</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>./nginx -v</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="nginx核心配置文件结构" tabindex="-1"><a class="header-anchor" href="#nginx核心配置文件结构"><span>Nginx核心配置文件结构</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>指令名 指令值; #全局块，主要设置Nginx服务器整体运行的配置指令</span></span>
<span class="line"><span>#events块,事件驱动模块，主要设置,Nginx服务器与用户的网络连接,这一部分对</span></span>
<span class="line"><span>Nginx服务器的性能影响较大</span></span>
<span class="line"><span>events {</span></span>
<span class="line"><span>指令名 指令值;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>#http块，是Nginx服务器配置中的重要部分，代理、缓存、日志记录、</span></span>
<span class="line"><span>第三方模块配置...</span></span>
<span class="line"><span>http {</span></span>
<span class="line"><span>指令名 指令值;</span></span>
<span class="line"><span>server { #server块，是Nginx配置和虚拟主机相关的内容,相当于一个主机，每个主机之间是隔离的</span></span>
<span class="line"><span>指令名 指令值;</span></span>
<span class="line"><span>location / {</span></span>
<span class="line"><span>#location块，基于Nginx服务器接收请求字符串与</span></span>
<span class="line"><span>location后面的值进行匹配，对特定请求进行处理</span></span>
<span class="line"><span>指令名 指令值;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>...</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>nginx.conf配置文件中默认有三大块：全局块、events块、http块 http块中可以配置多个server块，每个server块又可以配置多个location 块。</li><li><strong>Nginx配置文件中的各个块在嵌套的情况下，内层块内的指令比外层块内的指令执行优先级高</strong></li></ul><h2 id="运行原理" tabindex="-1"><a class="header-anchor" href="#运行原理"><span>运行原理</span></a></h2><p><img src="`+t+'" alt="image-20230928105901056"></p><h2 id="根据端口配置虚拟主机" tabindex="-1"><a class="header-anchor" href="#根据端口配置虚拟主机"><span>根据端口配置虚拟主机</span></a></h2><ul><li>访问不同的端口显示不同的页面</li></ul><p><img src="'+c+'" alt="image-20230928141024096"></p><p><img src="'+g+'" alt="image-20230928141059114"></p><h2 id="根据域名配置虚拟主机" tabindex="-1"><a class="header-anchor" href="#根据域名配置虚拟主机"><span>根据域名配置虚拟主机</span></a></h2><p><img src="'+h+'" alt="image-20230928141341651"></p><p><img src="'+v+'" alt="image-20230928141409668"></p>',47)]))}const k=i(m,[["render",o]]),x=JSON.parse('{"path":"/os/dczfm0gd/","title":"基础命令","lang":"zh-CN","frontmatter":{"title":"基础命令","createTime":"2025/04/05 16:30:59","permalink":"/os/dczfm0gd/"},"headers":[],"readingTime":{"minutes":3.77,"words":1131},"git":{"updatedTime":1743864983000,"contributors":[{"name":"舒永好","username":"舒永好","email":"shuyonghao@guoshenghuaxing.com","commits":1,"avatar":"https://gravatar.com/avatar/4b1c3f37ea707968be73c631a79de33afd360724ce87bf8f9dcacd67d14df92c?d=retro"}]},"filePathRelative":"notes/os/nginx/base/base_command.md"}');export{k as comp,x as data};
