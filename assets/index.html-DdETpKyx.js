import{_ as i,c as a,a as n,o as e}from"./app-C7T5jqfQ.js";const t={};function h(l,s){return e(),a("div",null,s[0]||(s[0]=[n(`<h2 id="引言" tabindex="-1"><a class="header-anchor" href="#引言"><span>引言</span></a></h2><p>有限状态机 (FSM) 并不是真正的机器，但它确实具有有限数量的状态。我一直发现有限状态机更容易用图表和图形来理解。例如，以下是将一只（非常愚蠢的）狗作为状态机简化的图表</p><p><img src="https://learnyousome.erlang.org.cn/static/img/fsm_dog.png" alt="A dog supports 3 states: barks, wag tail and sits. A barking dog can have the action &#39;gets petted&#39; applied to it, prompting a transition to &#39;wag tail&#39;. If the dog waits for too long, it goes back to barks state. If it gets petted more, it will sit until it sees a squirrel and starts barking again"></p><p>这里狗有 3 种状态：坐着、吠叫或摇尾巴。不同的事件或输入可能会迫使它改变状态。如果一只狗平静地坐着并看到一只松鼠，它会开始吠叫，并且不会停止，直到你再次抚摸它。然而，如果狗坐着，而你抚摸它，我们不知道会发生什么。在 Erlang 世界中，狗可能会崩溃（并最终被其主管重新启动）。在现实世界中，这将是一件怪异的事件，但你的狗会在被汽车撞倒后回来，所以也不全是坏事。</p><p>以下是一个猫的状态图，用于比较</p><p><img src="https://learnyousome.erlang.org.cn/static/img/fsm_cat.png" alt="A cat only has the state &#39;doesn&#39;t give a crap about you&#39; and can receive any event, remaining in that state."></p><p>这只猫只有一种状态，并且没有任何事件可以改变它。</p><h2 id="概念" tabindex="-1"><a class="header-anchor" href="#概念"><span>概念</span></a></h2><blockquote><p><code>gen_statem</code>是Erlang/OTP 19.0引入的新<code>behavior</code>。用于替换<code>gen_fsm</code>。</p><p><code>gen_fsm</code> 行为与 <code>gen_server</code> 有点相似，因为它是一个专门版本。最大的区别在于，我们不是处理<em>调用</em>和<em>投递</em>，而是处理<em>同步</em>和<em>异步**事件</em></p></blockquote><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">gen_statem</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> module</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">            Callback</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> module</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-----------------</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">            ---------------</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">gen_statem</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">start</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">gen_statem</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">start_monitor</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">gen_statem</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">start_link</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -----&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Module</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">init</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Server</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> start</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> or</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> code</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> change</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">                      -----&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Module</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">callback_mode</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">                      selects</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> callback</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> mode</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">gen_statem</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">stop</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Supervisor</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> exit</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Callback</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> failure</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">      -----&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Module</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">terminate</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">gen_statem</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">call</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">gen_statem</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">cast</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">gen_statem</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">send_request</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">erlang</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">send</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">erlang</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&#39;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">!</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&#39;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">            -----&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Module</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">:</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">StateName</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;-</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">state_functions</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">                   or</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -----&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Module</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">handle_event</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">4</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  &lt;-</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">handle_event_function</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">                   depending</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> on</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> callback</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> mode</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Release</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> upgrade</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">downgrade</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">code</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> change</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">                      -----&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Module</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">code_change</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="回调模式" tabindex="-1"><a class="header-anchor" href="#回调模式"><span>回调模式</span></a></h2><blockquote><p>此函数仅在服务器启动后、代码更改后、更改回调模块后、第一次<a href="https://www.erlang.org/doc/apps/stdlib/gen_statem#state-callback" target="_blank" rel="noopener noreferrer"><em>状态回调</em></a>之前调用一次 ，在当前回调模块的代码中被调用。</p><p>作用：指定gen_statem的回调模式</p></blockquote><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">type</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> callback_mode_result</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">	callback_mode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">callback_mode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> state_enter</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()].</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">type</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> callback_mode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ::</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> &#39;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">state_functions</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&#39;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">handle_event_function</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&#39;.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">callback_mode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">	callback_mode_result</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">().</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回值</p><ul><li><strong><code>state_functions</code></strong> - 要求状态名<code>StateName</code>必须是原子，并且回调函数的名称与状态同名 <ul><li>由<code>Module:StateName(EventType, EventContent, Data)</code>处理</li></ul></li><li><strong><code>handle_event_function</code></strong> - 状态名可以是任何形式，事件由一个回调函数处理。 <ul><li>由<code> Module:handle_event(EventType, EventContent, State, Data)</code>处理</li></ul></li><li>返回<code>列表</code>中加入<code>state_enter</code>，会在每次状态改变的时候调用回调函数</li></ul><h2 id="转换动作" tabindex="-1"><a class="header-anchor" href="#转换动作"><span>转换动作</span></a></h2><blockquote><p>动作被提到是作为通用状态机模型的一部分。这些通用动作是由<em>回调模块</em> <code>gen_statem</code> 在事件处理回调函数中执行的代码实现的。 <a href="https://www.erlang.org/doc/apps/stdlib/gen_statem" target="_blank" rel="noopener noreferrer"><code>gen_statem</code></a> 引擎返回之前。</p></blockquote><p>回调函数可以在返回后命令 <code>gen_statem </code>引擎执行更具体的<em>转换动作</em> 。这些动作通过在回调函数的返回值中返回一个<code>action</code>列表来命令。这些是可能的 <em>转换动作</em> ：</p><ul><li><strong><code>{postpone, Boolean}</code></strong> - 如果 <code>true</code>，则推迟当前事件</li><li><strong><code>{hibernate, Boolean}</code></strong> - 如果 <code>true</code>，则使 <code>gen_statem</code> 进入休眠状态</li><li><code>{state_timeout, Time, EventContent [, Opts]}</code>|<code> {state_timeout, update, EventContent}\`\`|</code><code>{state_timeout, cancel}</code>- 开始、更新或取消一个<em>状态超时</em></li><li><strong><code>{{timeout, Name}, Time, EventContent [, Opts]}\`\`|</code></strong><strong><code>{{timeout, Name}, update, EventContent}\`\`|</code></strong><strong><code>{{timeout, Name}, cancel}</code></strong> - 开始、更新或取消一个*<strong>通用超时*</strong></li><li><strong><code>{timeout, Time, EventContent [, Opts]}</code></strong> - 开始一个<em>事件超时</em></li><li><strong><code>{reply, From, Reply}</code></strong> - 回复一个 调用者</li><li><strong><code>{next_event, EventType, EventContent}</code></strong>- 生成下一个要处理的事件</li><li>**<code>{change_callback_module, NewModule}</code> **- 更改正在运行的服务器的<em>回调模块</em> 。这可以在任何<em>状态转换</em>期间完成，无论是<em>状态改变</em>还是不是，但不能在<em>状态进入调用</em>中完成。 <a href="https://www.erlang.org/doc/system/statem.html#state-enter-calls" target="_blank" rel="noopener noreferrer"><em>状态进入调用</em></a>中完成。</li><li>**<code>{push_callback_module, NewModule}</code> **- 将当前 <em>回调模块</em> 推送到内部回调模块堆栈的顶部，并为运行中的服务器设置新的 <a href="https://www.erlang.org/doc/system/statem.html#callback-module" target="_blank" rel="noopener noreferrer"><em>回调模块</em></a> 否则如 <code>{change_callback_module, NewModule}</code> 上面。</li><li><code>pop_callback_module</code> - 弹出顶部模块 从回调模块的内部堆栈中获取，并将其设置为新的值 运行服务器的<a href="https://www.erlang.org/doc/system/statem.html#callback-module" target="_blank" rel="noopener noreferrer"><em>回调模块</em></a>。如果 堆栈为空时服务器会失败。否则，像 <code>{change_callback_module, NewModule}</code> 上面。</li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>其中，唯一的即时动作是<em>转换动作</em>中的 <code>reply</code> 用于回复调用者。其他的动作会被收集起来，并在稍后<em>状态转换</em>时处理。</p><p>插入的事件会被存储并在一起插入，其余的设置转换选项，其中最后一种特定类型的选项会覆盖之前的。</p></div><h2 id="事件类型和事件内容" tabindex="-1"><a class="header-anchor" href="#事件类型和事件内容"><span>事件类型和事件内容</span></a></h2><blockquote><p>事件被分类为不同的 事件类型。所有类型的事件都是为了一个 给定状态在同一回调函数中处理，且该函数会获取 <code>EventType</code> 和 <code>EventContent</code> 作为参数。<code>EventContent</code> 的含义为： 依赖于 <code>EventType</code>。</p></blockquote><p>以下是一份完整的事件类型列表及其来源： <em>事件类型</em> ：</p><ul><li><strong><code>cast</code></strong> - 由 <code>gen_statem:cast(ServerRef, Msg)</code>其中 <code>Msg</code> 变成 <code>EventContent</code>。</li><li><strong><code>{call, From}</code></strong> - 由 <code>gen_statem:call(ServerRef, Request)</code>, <code>gen_statem:send_request(ServerRef, Request)</code> ，或 <code>gen_statem:send_request(ServerRef, Request, _, _)</code> ，其中 <code>Request</code> 变为 <code>EventContent</code>。<code>From</code> 是用于回复的回复地址，可以通过 <em>转换动作</em> <code>{reply, From, Reply}</code> 来回复，或者通过调用 <code>gen_statem:reply(From, Reply)</code>来回复 从 <em>回调模块</em> 。</li><li><strong><code>info</code></strong> - 由任何常规进程发送给 <code>gen_statem</code> 进程的任意消息生成。该进程消息成为 <code>EventContent</code>。</li><li><strong><code>state_timeout</code></strong> - 由超时引发的 <em>转换动作</em> <code>{state_timeout, Time, EventContent}</code> 当超时到期时。</li><li><strong><code>{超时, Name}</code></strong> - 由 <em>转换动作</em> <code>{{timeout, Name},Time, EventContent}</code> 当超时到期时触发。</li><li><strong><code>timeout</code></strong> - 由 <em>转换动作</em> <code>{timeout, Time, EventContent}</code>(或其简短形式 <code>Time</code>) 当超时到期时。internal - 由 <em>转换动作</em> <code>{next_event, internal, EventContent}</code> 生成。所有上述 <em>事件类型</em> 也可以通过 <code>next_event</code> 动作生成： <code>{next_event, EventType, EventContent}</code> .</li></ul><h2 id="服务端-回调模块" tabindex="-1"><a class="header-anchor" href="#服务端-回调模块"><span>服务端------回调模块</span></a></h2><h3 id="init-1" tabindex="-1"><a class="header-anchor" href="#init-1"><span>init/1</span></a></h3><blockquote><p>用于初始化状态机</p></blockquote><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">init</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">_Args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> State</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>参数</p><ul><li><code>Args</code>: 客户端调用<code>start_link</code>时发送的参数</li></ul><p>返回值</p><p>新内容是 <code>StateName</code> 变量。 <code>StateName</code> 是一个原子，表示要调用的下一个回调函数。</p><ul><li><code>{ok,StateName,Data} </code> State 将直接传递到进程的主循环中，作为稍后保留的状态</li><li><code>{ok,StateName,Data,TimeOut}</code> 如果在截止时间之前没有收到消息，则会向服务器发送一个特殊的（原子 timeout）消息，应通过 handle_info/2处</li><li><code>{ok,StateName,Data,hibernate}</code> 如果你确实希望进程在获得回复之前花费很长时间，并且担心内存，你可以将 hibernate 原子添加到元组中。</li><li><code>{stop,Reason}</code> 在初始化过程中出现错误时</li></ul><h3 id="statename-3" tabindex="-1"><a class="header-anchor" href="#statename-3"><span>StateName/3</span></a></h3><blockquote><p><code>state_functions</code>模式下使用</p><p>函数<code> StateName/3</code> 是占位符名称，由您决定它们是什么。假设 <code>init/1</code> 函数返回元组 <code>{ok, sitting, dog}</code>。这意味着有限状态机将处于 <code>sitting</code> 状态。</p></blockquote><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">StateName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">EventType</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> EventContent</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> StateFunctionResult</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>参数</strong></p><ul><li><p><code>EventType</code> 事件类型 <code>{call, From}</code>、<code>cast</code>、<code>info</code>这3种事件是通过接口产生的外部事件，其他的则是在执行过程中由<code>gen_statem</code>产生的。</p><ul><li><code>cast</code>由<code>gen_statem:cast(ServerRef, Msg)</code>生成，其中<code>Msg</code>会传递给参数<code>EventContent</code>。</li><li><code>{call,From}</code>由<code>gen_statem:call(ServerRef, Request)</code>生成，其中<code>Request</code>会传递给参数<code>EventContent</code>。<code>From</code>是通过迁移动作<code>{reply,From,Reply}</code>或在回调模块中调用<code>gen_statem:reply(From, Reply)</code>进行回复时的回复地址。</li><li><code>info</code>由任何发送到<code>gen_statem</code>进程的普通消息生成。进程消息会传递给参数<code>EventContent</code>。</li><li><code>state_timeout</code>由迁移动作<code>{state_timeout,Time,EventContent}</code>状态定时器超时生成。</li><li><code>{timeout,Name}</code>由迁移动作<code>{{timeout,Name},Time,EventContent}</code>一般定时器超时生成。</li><li><code>timeout</code>由迁移动作<code>{timeout,Time,EventContent}</code>（或者它的缩写形式<code>Time</code>）事件定时器超时生成。</li><li><code>internal</code>由迁移动作<code>{next_event,internal,EventContent}</code>生成。上面所有事件类型都可以通过使用<code>next_event</code>动作：<code>{next_event,EventType,EventContent}</code>生成。</li></ul></li><li><p><code>EventContent</code></p></li><li><p><code>Data</code></p></li></ul><p><strong>返回值</strong></p><ul><li><p><code>{next_state,NewStateName,NewData}</code></p><ul><li><code>next_state</code> 进入新的回调</li><li><code>repeat_state</code>会再次执行进入状态回调，相当于再次进入该状态；</li><li>而<code>keep_state</code>则不会</li></ul></li><li><p><code>{next_state,NewStateName,NewData,Actions}</code> <code>Actions</code>表示状态迁移动作，在回调函数返回后指定<code>gen_statem</code>去执行，主要包含：</p><ul><li><code>postpone </code>表示在当前状态下延缓事件，等待状态改变时再重新触发；</li><li><code>hibernate</code> 表示挂起<code>gen_statem</code>进程直至下一个事件到来；</li><li><code>TimeOut</code>、<code>{timeout, Time, EventContent}</code>、<code>{timeout, Time, EventContent, Options}</code>表示事件超时，一定时间内没有事件达到就会触发该超时。事件超时的定时器在有事件达到的时候就会被取消。超时后会触发事件<code>timeout</code>；</li><li><code>{{timeout, Name}, Time, EventContent}</code>、<code>{{timeout, Name}, Time, EventContent, Options}</code>表示一般超时，一定时间后触发，与状态改变、事件更新无关。超时后会触发事件<code>{timeout, Name}</code>。可以通过设置一个同名的超时动作来重启这个定时器，如果想要终止这个定时器只需要将超时改成<code>infinity</code>即可；</li><li><code>{state_timeout, Time, EventContent}</code>、<code>{state_timeout, Time, EventContent, Options}</code>表示状态超时，一定时间内状态没有变化就会触发该超时。状态超时会在状态改变时被取消。超时后会触发事件<code>state_timeout</code>；</li><li><code>{next_event, EventType, EventContent :: term()}</code>表示像事件队列头部插入一个事件，该事件将会被优先处理，可用于触发所有事件。<code>{next_event, internal, EventContent}</code>触发的事件为<code>internal</code>，表示内部事件，用于区分外部事件；</li><li><code>{reply, From, Reply}</code>用于给<code>From</code>返回值。除此之后也可以通过调用<code>gen_statem:reply(From, Reply)</code>进行返回。</li></ul></li></ul><h3 id="handle-event-4" tabindex="-1"><a class="header-anchor" href="#handle-event-4"><span>handle_event/4</span></a></h3><blockquote><p>\`handle_event_function\`\`模式下使用</p></blockquote><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">handle_event</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">EventType</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">EventContent</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">StateName</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> HandleEventResult</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>参数</strong></p><p><strong>返回值</strong></p><h2 id="客户端" tabindex="-1"><a class="header-anchor" href="#客户端"><span>客户端</span></a></h2><h3 id="启动" tabindex="-1"><a class="header-anchor" href="#启动"><span>启动</span></a></h3><blockquote><p>初始化状态机</p></blockquote><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">gen_statem</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">start_link</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">local</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">NAME</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">},</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ?</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">MODULE</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Code</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [])</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>参数</strong></p><ul><li><code>{local，？NAME}</code> 指定名称 <ul><li>如果省略该名称，则不注册 <code>gen_statem</code>。相反，必须使用它的 pid。名称也可以指定为 <code>{global， Name}</code>，则 <code>gen_statem</code> 在 Kernel 中使用 <a href="https://www.erlang.org/doc/apps/kernel/global#register_name/2" target="_blank" rel="noopener noreferrer"><code>global：register_name/2</code></a> 注册。</li></ul></li><li><code>？MODULE，</code> 是<em>回调模块</em>的名称，也就是回调函数所在的模块</li><li><code>Code</code> 是一个数字列表，这是传递给回调函数 <code>init/1</code> 的正确解锁代码。</li><li><code>[]</code> 是选项列表</li></ul><p><strong>返回值</strong></p><ul><li>调用函数 <a href="https://www.erlang.org/doc/apps/stdlib/gen_statem#start_link/4" target="_blank" rel="noopener noreferrer"><code>gen_statem：start_link/4</code></a>，该函数生成并链接到新进程<code>gen_statem</code>，新的 <code>gen_statem</code> 进程将调用回调函数 <code>code_lock：init（Code）。</code> 此函数应返回 <code>{ok， State， Data}</code>，其中 <code>State</code> 是 <code>gen_statem</code> 的初始状态</li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>功能 <a href="https://www.erlang.org/doc/apps/stdlib/gen_statem#start_link/3" target="_blank" rel="noopener noreferrer"><code>gen_statem：start_link/3,4</code></a> 如果 <code>gen_statem</code> 是监督树的一部分，则必须使用 由主管启动。 功能 <a href="https://www.erlang.org/doc/apps/stdlib/gen_statem#start/3" target="_blank" rel="noopener noreferrer"><code>gen_statem：start/3,4</code></a> 可用于启动独立 <code>gen_statem</code>，这意味着它不是监督树的一部分。</p></div><h3 id="同步消息" tabindex="-1"><a class="header-anchor" href="#同步消息"><span>同步消息</span></a></h3><blockquote><p>发送同步消息</p></blockquote><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">gen_statem</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">cast</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">ServerRef</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Request</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>参数</strong></p><ul><li><code>ServerRef</code> <code>gen_statem</code> 的名称，并且必须与用于启动它的名称一致</li><li><code>Request</code> 为事件内容。</li></ul><p><strong>返回值</strong></p><ul><li>事件将发送到 <code>gen_statem</code>。收到事件后， <ul><li><code>state_functions</code>模式 ,<code>gen_statem</code> 调用 <code>StateName（cast， Event， Data）</code></li><li><code>handle_event_function</code>模式 ,<code>gen_statem</code> 调用 <code>handle_event（cast， Event， Data）</code></li></ul></li></ul><h3 id="异步消息" tabindex="-1"><a class="header-anchor" href="#异步消息"><span>异步消息</span></a></h3><blockquote><p>发送异步消息</p></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>gen_statem:cast(ServerRef, Request)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>参数</strong></p><ul><li><code>ServerRef</code> <code>gen_statem</code> 的名称，并且必须与用于启动它的名称一致</li><li><code>Request</code> 为事件内容。</li></ul><p><strong>返回值</strong></p><ul><li>事件将发送到 <code>gen_statem</code>。收到事件后， <ul><li><code>state_functions</code>模式 ,<code>gen_statem</code> 调用 <code>StateName（cast， Event， Data）</code></li><li><code>handle_event_function</code>模式 ,<code>gen_statem</code> 调用 \`handle_event（cast， Event， Data）</li></ul></li></ul><h3 id="超时处理" tabindex="-1"><a class="header-anchor" href="#超时处理"><span>超时处理</span></a></h3><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h2><h3 id="state-functions模式" tabindex="-1"><a class="header-anchor" href="#state-functions模式"><span>state_functions模式</span></a></h3><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">module</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">pushbutton</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">behaviour</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">gen_statem</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">export</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">([</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">start</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">push</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">get_count</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">stop</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]).</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">export</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">([</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">terminate</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">code_change</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">4</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">init</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">callback_mode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]).</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">export</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">([</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">on</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">off</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]).</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> pushbutton_statem</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">% The registered server name </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">%% API. This example uses a registered name name() </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">%% and does not link to the caller. </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">start</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">    gen_statem</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">start</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">local</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()},</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ?</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">MODULE</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [],</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> []).</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">push</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">    gen_statem</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">call</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(),</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> push</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">get_count</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">    gen_statem</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">call</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(),</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> get_count</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">stop</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">    gen_statem</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">stop</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()).</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">%% Mandatory callback functions </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">terminate</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">_Reason</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">_State</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">_Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    void</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">code_change</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">_Vsn</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">State</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">_Extra</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">State</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">init</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">([])</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    %% Set the initial state + data. Data is used only as a counter.</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    State</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> off</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Data</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">State</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">callback_mode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    state_functions</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">%%% state callback(s) </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">off</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">call</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">From</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">push</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    %% Go to &#39;on&#39;, increment count and reply </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    %% that the resulting status is &#39;on&#39; </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">next_state</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">on</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,[{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">reply</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">From</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">on</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}]};</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">off</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">EventType</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">EventContent</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    handle_event</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">EventType</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> EventContent</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">on</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">call</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">From</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">push</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    %% Go to &#39;off&#39; and reply that the resulting status is &#39;off&#39; </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">next_state</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">off</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,[{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">reply</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">From</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">off</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}]};</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">on</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">EventType</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">EventContent</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    handle_event</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">EventType</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> EventContent</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">%% Handle events common to all states </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">handle_event</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">call</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">From</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">get_count</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    %% Reply with the current count </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">keep_state</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,[{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">reply</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">From</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}]};</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">handle_event</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">_</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">_</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    %% Ignore all other events </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">keep_state</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="handle-event-function模式" tabindex="-1"><a class="header-anchor" href="#handle-event-function模式"><span>handle_event_function模式</span></a></h3><div class="language-erlang line-numbers-mode" data-highlighter="shiki" data-ext="erlang" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">module</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">pushbutton</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">behaviour</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">gen_statem</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">export</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">([</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">start</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">push</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">get_count</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">stop</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]).</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">export</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">([</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">terminate</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">code_change</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">4</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">init</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">callback_mode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]).</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">export</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">([</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">on</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">off</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]).</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> pushbutton_statem</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">% The registered server name </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">%% API. This example uses a registered name name() </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">%% and does not link to the caller. </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">start</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">    gen_statem</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">start</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">local</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()},</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ?</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">MODULE</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [],</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> []).</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">push</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">    gen_statem</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">call</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(),</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> push</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">get_count</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">    gen_statem</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">call</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(),</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> get_count</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">stop</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">    gen_statem</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">stop</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()).</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">%% Mandatory callback functions </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">terminate</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">_Reason</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">_State</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">_Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    void</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">code_change</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">_Vsn</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">State</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">_Extra</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">State</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">init</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">([])</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    %% Set the initial state + data. Data is used only as a counter.</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    State</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> off</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Data</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">State</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">callback_mode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    handle_event_function</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">%%% state callback(s) </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">handle_event</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">call</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">From</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">push</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">off</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    %% Go to &#39;on&#39;, increment count and reply </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    %% that the resulting status is &#39;on&#39; </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">next_state</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">on</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,[{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">reply</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">From</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">on</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}]};</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">handle_event</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">call</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">From</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">push</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">on</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    %% Go to &#39;off&#39; and reply that the resulting status is &#39;off&#39; </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">next_state</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">off</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,[{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">reply</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">From</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">off</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}]};</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">%% %% Event handling common to all states </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">handle_event</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">call</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">From</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">get_count</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">State</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    %% Reply with the current count </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">next_state</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">State</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,[{</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">reply</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">From</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}]};</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">handle_event</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">_</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">_</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">State</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    %% Ignore all other events </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">next_state</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">State</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,74)]))}const p=i(t,[["render",h]]),d=JSON.parse('{"path":"/backend/erlang/zpwo3yqc/","title":"gen_statem行为","lang":"zh-CN","frontmatter":{"title":"gen_statem行为","createTime":"2025/04/07 19:01:43","permalink":"/backend/erlang/zpwo3yqc/"},"headers":[],"readingTime":{"minutes":10.66,"words":3197},"git":{"updatedTime":1744272082000,"contributors":[{"name":"syh","username":"syh","email":"syh@qq.com","commits":4,"avatar":"https://gravatar.com/avatar/060d67e779a1b0aeace68a2a010b367f852e56888393383ea27302df983f6814?d=retro"}]},"filePathRelative":"notes/backend/erlang/erlang_otp/design_rule/gen_statem.md"}');export{p as comp,d as data};
